// ====== URL-—ã –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã ======
const VK_PARSER_URL = 'https://script.google.com/macros/s/AKfycbzttbqz16EmmcXbEYCuYhNlXkCxAnCG77phspFL1_rTCi4xVqoorByJAPa4dI4iwT8/exec';
const GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent';
// –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (–≤–µ–±‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ) –¥–ª—è –ª–∏—Ü–µ–Ω–∑–∏–π/–ª–æ–≥–æ–≤
const SERVER_URL = 'https://script.google.com/macros/s/AKfycbyyUlB5YWP4bwv3gHHniTv_12cAHlqjYfra7fQ3m3Vri5XvZTQ_uUZZovCYeTo2_u6gQw/exec';

// ====== –ö–û–ù–°–¢–ê–ù–¢–´ –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò (legacy-—Ç—Ä–∏–≥–≥–µ—Ä—ã, –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏) ======
const AUTO_PROCESSING_DELAY = 20000; // 20 —Å–µ–∫
const LONG_PROCESSING_DELAY = 45000; // 45 —Å–µ–∫
const COMPLETION_PHRASE = '–û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤';
const PROCESSING_STATUS_KEY = 'AUTO_PROCESSING_STATUS';
const LOGS_CACHE_KEY = 'SYSTEM_LOGS';
const MAX_LOGS = 300;
const LOGS_TTL = 86400; // 24—á
const MAX_RETRY_ATTEMPTS = 5;
const RETRY_DELAY_INCREMENT = 10000;

// ====== DEV –§–õ–ê–ì ======
const DEV_MODE = true; // DEV: –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å DEV-–º–µ–Ω—é/–ª–æ–≥–∏

// ====== –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ======
function addLog(msg, level = 'INFO') {
  try {
    var cache = CacheService.getScriptCache();
    var logs = cache.get(LOGS_CACHE_KEY);
    logs = logs ? JSON.parse(logs) : [];
    var ts = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'yyyy-MM-dd HH:mm:ss');
    logs.push({ timestamp: ts, level: level, message: msg });
    if (logs.length > MAX_LOGS) logs.shift();
    cache.put(LOGS_CACHE_KEY, JSON.stringify(logs), LOGS_TTL);
    console.log(`[${ts}] ${level}: ${msg}`);
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:', e.message);
  }
}

// ====== VK Parser URL: –∂—ë—Å—Ç–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É VK_PARSER_URL (–±–µ–∑ —á—Ç–µ–Ω–∏—è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã!B5) ======
function getVkParserUrl_() {
  try { return String(VK_PARSER_URL).replace(/\/$/, ''); }
  catch (e) { addLog('‚ö†Ô∏è getVkParserUrl_: ' + e.message, 'WARN'); return String(VK_PARSER_URL||'').replace(/\/$/, ''); }
}
function getLogs(limit = 100) {
  try {
    var cache = CacheService.getScriptCache();
    var logs = cache.get(LOGS_CACHE_KEY);
    if (!logs) return '–õ–æ–≥–∏ –ø—É—Å—Ç—ã.';
    var arr = JSON.parse(logs);
    var recent = arr.slice(-limit);
    return recent.map(x => `[${x.timestamp}] ${x.level}: ${x.message}`).join('\n');
  } catch (e) {
    return '–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: ' + e.message;
  }
}
function showLogsDialog() {
  try {
    SpreadsheetApp.getUi().alert('üìù –õ–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 100)', getLogs(100), SpreadsheetApp.getUi().ButtonSet.OK);
  } catch (e) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤: ' + e.message);
  }
}
function exportLogsToSheet() {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheet = ss.getSheetByName('–õ–æ–≥–∏') || ss.insertSheet('–õ–æ–≥–∏');
    var cache = CacheService.getScriptCache();
    var logs = cache.get(LOGS_CACHE_KEY);
    if (!logs) {
      addLog('‚ùå –ù–µ—Ç –ª–æ–≥–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞', 'WARN');
      SpreadsheetApp.getUi().alert('–õ–æ–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.');
      return;
    }
    var logEntries = JSON.parse(logs);
    var data = [['–í—Ä–µ–º—è', '–£—Ä–æ–≤–µ–Ω—å', '–°–æ–æ–±—â–µ–Ω–∏–µ']];
    logEntries.forEach(e => data.push([e.timestamp, e.level, e.message]));
    sheet.clear();
    sheet.getRange(1, 1, data.length, 3).setValues(data);
    sheet.getRange(1,1,1,3).setFontWeight('bold').setBackground('#E8F0FE');
    sheet.autoResizeColumns(1,3);
    addLog('‚úÖ –õ–æ–≥–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ –ª–∏—Å—Ç "–õ–æ–≥–∏"', 'INFO');
    SpreadsheetApp.getUi().alert('–ì–æ—Ç–æ–≤–æ: –ª–æ–≥–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ "–õ–æ–≥–∏".');
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ª–æ–≥–æ–≤: ' + e.message, 'ERROR');
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ª–æ–≥–æ–≤: ' + e.message);
  }
}
function clearLogs() {
  try {
    CacheService.getScriptCache().remove(LOGS_CACHE_KEY);
    addLog('‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã', 'INFO');
    SpreadsheetApp.getUi().alert('–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã.');
  } catch (e) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤: ' + e.message);
  }
}

// ====== –¢–†–ò–ì–ì–ï–†–´ (–ø—Ä–æ—Å–º–æ—Ç—Ä/–æ—á–∏—Å—Ç–∫–∞) ======
function cleanupOldTriggers() {
  try {
    addLog('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤...', 'INFO');
    var triggers = ScriptApp.getProjectTriggers();
    var deleted = 0, kept = 0;
    triggers.forEach(function(trigger) {
      var fn = trigger.getHandlerFunction();
      if (fn !== 'onEdit' && fn !== 'onOpen') {
        if (fn === 'checkStepCompletion') {
          ScriptApp.deleteTrigger(trigger);
          deleted++;
          addLog('üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä: ' + fn, 'INFO');
        } else {
          kept++;
        }
      } else {
        kept++;
      }
    });
    var summary = '‚úÖ –û—á–∏—Å—Ç–∫–∞: —É–¥–∞–ª–µ–Ω–æ ' + deleted + ', –æ—Å—Ç–∞–≤–ª–µ–Ω–æ ' + kept;
    addLog(summary, 'INFO');
    SpreadsheetApp.getUi().alert(summary);
    return summary;
  } catch (e) {
    var msg = '‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ' + e.message;
    addLog(msg, 'ERROR');
    SpreadsheetApp.getUi().alert(msg);
    return msg;
  }
}
function showActiveTriggersDialog() {
  try {
    var triggers = ScriptApp.getProjectTriggers();
    if (triggers.length === 0) {
      SpreadsheetApp.getUi().alert('–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã', '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    var list = triggers.map((t,i) => (i+1)+'. '+t.getHandlerFunction()+' ('+t.getEventType()+')').join('\n');
    SpreadsheetApp.getUi().alert('–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã', '–í—Å–µ–≥–æ: '+triggers.length+'\n\n'+list, SpreadsheetApp.getUi().ButtonSet.OK);
  } catch (e) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ' + e.message);
  }
}

// ====== MARKDOWN ‚Üí —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç ======
function convertMarkdownToReadableText(markdownText) {
  if (!markdownText || typeof markdownText !== 'string') return markdownText;
  var text = markdownText;
  try {
    text = text.replace(/```[\w]*\n?([\s\S]*?)\n?```/g, (_m, code) => '\n' + String(code || '').trim() + '\n');
    text = text.replace(/`([^`]+)`/g, '$1');
    text = text.replace(/\*\*([^*]+)\*\*/g, (_m, c) => String(c || '').toUpperCase());
    text = text.replace(/\*([^*]+)\*/g, '$1');
    text = text.replace(/^#{1,6}\s+(.+)$/gm, (_m, h) => '\n' + String(h || '').toUpperCase() + ':\n');
    var lines = text.split('\n');
    var inList = false, listCounter = 0;
    lines = lines.map(line => {
      var t = line.trim();
      if (/^[-*+]\s+/.test(t)) {
        if (!inList) { listCounter = 0; inList = true; }
        listCounter++;
        return line.replace(/^(\s*)[-*+]\s+/, '$1' + listCounter + '. ');
      } else if (t === '') { inList = false; return line; }
      inList = false; return line;
    });
    text = lines.join('\n');
    text = text.replace(/\[([^\]]+)\]\([^\)]+\)/g, '$1');
    text = text.replace(/\n{3,}/g, '\n\n').trim();
    addLog('‚úÖ Markdown –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω', 'DEBUG');
    return text;
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ MD –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: ' + e.message, 'ERROR');
    return markdownText;
  }
}
function isMarkdownText(text) {
  if (!text || typeof text !== 'string') return false;
  var patterns = [
    /\*\*[^*]+\*\*/, /\*[^*]+\*/, /^#{1,6}\s+/m,
    /^[-*+]\s+/m, /\[.+\]\(.+\)/, /```[\s\S]*?```/, /`[^`]+`/
  ];
  return patterns.some(p => p.test(text));
}
function processGeminiResponse(response) {
  if (!response) return response;
  if (isMarkdownText(response)) {
    addLog('üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω Markdown ‚Üí –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º', 'INFO');
    return convertMarkdownToReadableText(response);
  }
  return response;
}

// ====== –§–†–ê–ó–ê –ì–û–¢–û–í–ù–û–°–¢–ò: –∏–∑ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã!B10 ‚Üí Script Properties ‚Üí –¥–µ—Ñ–æ–ª—Ç ======
function getCompletionPhrase() {
  try {
    var ss = SpreadsheetApp.getActive();
    var params = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
    if (params) {
      try {
        var v = params.getRange('B10').getDisplayValue();
        if (v && String(v).trim()) return String(v).trim();
      } catch (e) {}
    }
    var prop = PropertiesService.getScriptProperties().getProperty('COMPLETION_PHRASE');
    if (prop && String(prop).trim()) return String(prop).trim();
  } catch (e) {
    addLog('‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ—Ä–∞–∑—ã –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: ' + e.message, 'WARN');
  }
  return COMPLETION_PHRASE;
}
function setCompletionPhraseUI() {
  var ui = SpreadsheetApp.getUi();
  var current = getCompletionPhrase();
  var res = ui.prompt('üìù –§—Ä–∞–∑–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏', '–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—É—é —Ñ—Ä–∞–∑—É, —Å –∫–æ—Ç–æ—Ä–æ–π –î–û–õ–ñ–ï–ù –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤). –¢–µ–∫—É—â–∞—è: ' + current, ui.ButtonSet.OK_CANCEL);
  if (res.getSelectedButton() !== ui.Button.OK) return;
  var val = (res.getResponseText() || '').trim();
  if (!val) { ui.alert('–§—Ä–∞–∑–∞ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞.'); return; }
  var ss = SpreadsheetApp.getActive();
  var params = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
  if (!params) {
    // –µ—Å–ª–∏ –Ω–µ—Ç –ª–∏—Å—Ç–∞ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏–º –≤ Script Properties
    PropertiesService.getScriptProperties().setProperty('COMPLETION_PHRASE', val);
    ui.alert('‚úÖ –§—Ä–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–∫—Ä–∏–ø—Ç–∞.');
  } else {
    params.getRange('B10').setValue(val);
    ui.alert('‚úÖ –§—Ä–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã!B10.');
  }
  addLog('üîß –ù–æ–≤–∞—è —Ñ—Ä–∞–∑–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: ' + val, 'INFO');
}

// ====== –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò ======
function isCompletionReady(text) {
  if (!text || typeof text !== 'string') return false;
  var clean = text.trim();
  var phrase = getCompletionPhrase();
  var rdy = phrase ? clean.startsWith(phrase) : false;
  addLog(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: "${clean.slice(0,30)}..." –ø—Ä–æ—Ç–∏–≤ "${phrase}" ‚Üí ${rdy ? '–ì–û–¢–û–í–û' : '–ù–ï –ì–û–¢–û–í–û'}`, 'DEBUG');
  return rdy;
}

// ====== Prompt_box: —Ñ–∏–∫—Å —á—Ç–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª—ã (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º legacy-—Ç—Ä–∏–≥–≥–µ—Ä—ã) ======
function getPromptFormula(rowIndex) {
  try {
    var ss = SpreadsheetApp.getActive();
    var promptSheet = ss.getSheetByName('Prompt_box');
    if (!promptSheet) { addLog('‚ùå –õ–∏—Å—Ç "Prompt_box" –Ω–µ –Ω–∞–π–¥–µ–Ω', 'ERROR'); return null; }
    var rng = promptSheet.getRange(rowIndex, 6); // F
    var formula = rng.getFormula(); // –í–ê–ñ–ù–û: —Ñ–æ—Ä–º—É–ª–∞, –∞ –Ω–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if (!formula || !formula.trim()) { addLog(`‚ÑπÔ∏è –§–æ—Ä–º—É–ª–∞ –≤ Prompt_box!F${rowIndex} –ø—É—Å—Ç–∞`, 'INFO'); return null; }
    addLog(`üì• –§–æ—Ä–º—É–ª–∞ –∏–∑ Prompt_box!F${rowIndex}: ${formula.slice(0,80)}...`, 'DEBUG');
    return formula;
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª—ã –∏–∑ F' + rowIndex + ': ' + e.message, 'ERROR');
    return null;
  }
}
function setFormulaToCell(row, col, formula) {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
    if (!sheet) { addLog('‚ùå –õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω', 'ERROR'); return false; }
    var cell = sheet.getRange(row, col);
    cell.setFormula(formula);
    addLog('‚úÖ –§–æ—Ä–º—É–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ ' + cell.getA1Notation() + ': ' + formula.slice(0, 80) + '...', 'INFO');
    return true;
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ—Ä–º—É–ª—ã –≤ (' + row + ',' + col + '): ' + e.message, 'ERROR');
    return false;
  }
}
function getCellValue(sheetName, row, col) {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheet = ss.getSheetByName(sheetName);
    if (!sheet) return null;
    var value = sheet.getRange(row, col).getValue();
    if (value && typeof value === 'string' && col > 1) {
      var processed = processGeminiResponse(value);
      if (processed !== value) {
        sheet.getRange(row, col).setValue(processed);
        addLog('üîÑ Markdown –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ ' + sheet.getRange(row, col).getA1Notation(), 'INFO');
        return processed;
      }
    }
    return value;
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —è—á–µ–π–∫–∏ ' + sheetName + '(' + row + ',' + col + '): ' + e.message, 'ERROR');
    return null;
  }
}

// ====== Legacy-—Ü–µ–ø–æ—á–∫–∞ –Ω–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∞—Ö (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –º–µ–Ω—é –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º) ======
function saveProcessingStatus(row, currentStep, retryCount = 0) {
  try {
    var cache = CacheService.getScriptCache();
    var status = { row: row, currentStep: currentStep, retryCount: retryCount, timestamp: new Date().getTime() };
    cache.put(PROCESSING_STATUS_KEY, JSON.stringify(status), 21600);
    addLog('üíæ –°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: —Å—Ç—Ä–æ–∫–∞ ' + row + ', —à–∞–≥ ' + currentStep + ', –ø–æ–ø—ã—Ç–∫–∞ ' + (retryCount + 1), 'DEBUG');
  } catch (e) { addLog('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ' + e.message, 'ERROR'); }
}
function getProcessingStatus() {
  try {
    var cache = CacheService.getScriptCache();
    var statusStr = cache.get(PROCESSING_STATUS_KEY);
    return statusStr ? JSON.parse(statusStr) : null;
  } catch (e) { addLog('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ' + e.message, 'ERROR'); return null; }
}
function clearProcessingStatus() {
  try { CacheService.getScriptCache().remove(PROCESSING_STATUS_KEY); addLog('üóëÔ∏è –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–∏—â–µ–Ω', 'DEBUG'); }
  catch (e) { addLog('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ' + e.message, 'ERROR'); }
}
function startAutoProcessingChain(row) {
  addLog('üöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ü–µ–ø–æ—á–∫–∏ (legacy) –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ' + row, 'INFO');
  var activeStatus = getProcessingStatus();
  if (activeStatus) { addLog('üö´ –¶–µ–ø–æ—á–∫–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞: —Å—Ç—Ä–æ–∫–∞ ' + activeStatus.row + ' (—à–∞–≥ ' + activeStatus.currentStep + ')', 'WARN'); notifyUser('–î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ ' + activeStatus.row); return false; }
  var triggerValue = getCellValue('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞', row, 1);
  if (!triggerValue) { addLog('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ A' + row + ' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ü–µ–ø–æ—á–∫–∏', 'WARN'); return false; }
  saveProcessingStatus(row, 1);
  processNextStep();
  return true;
}
function processNextStep() {
  var status = getProcessingStatus();
  if (!status) { addLog('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏', 'WARN'); return; }
  var row = status.row, step = status.currentStep;
  addLog('üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–∞ ' + step + ' –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ' + row, 'INFO');
  var promptRow = step + 1; // F2, F3, ...
  var formula = getPromptFormula(promptRow);
  if (!formula) { addLog('‚úÖ –ù–µ—Ç —Ñ–æ—Ä–º—É–ª—ã –≤ F' + promptRow + ', —Ü–µ–ø–æ—á–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'INFO'); clearProcessingStatus(); return; }
  var targetCol = step + 1; // B=2, C=3...
  if (!setFormulaToCell(row, targetCol, formula)) { addLog('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É, —Ü–µ–ø–æ—á–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞', 'ERROR'); clearProcessingStatus(); return; }
  saveProcessingStatus(row, step);
  try { ScriptApp.newTrigger('checkStepCompletion').timeBased().after(AUTO_PROCESSING_DELAY).create(); addLog('‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ ' + (AUTO_PROCESSING_DELAY/1000) + ' —Å–µ–∫', 'DEBUG'); }
  catch (e) { addLog('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞: ' + e.message, 'ERROR'); }
}
function checkStepCompletion() {
  ScriptApp.getProjectTriggers().forEach(function(t){ if (t.getHandlerFunction() === 'checkStepCompletion') ScriptApp.deleteTrigger(t); });
  var status = getProcessingStatus();
  if (!status) { addLog('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ', 'WARN'); return; }
  var row = status.row, step = status.currentStep, retryCount = status.retryCount || 0;
  var targetCol = step + 1;
  var result = getCellValue('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞', row, targetCol);
  if (!result) { addLog('‚è≥ –®–∞–≥ ' + step + ' (–ø–æ–ø—ã—Ç–∫–∞ ' + (retryCount+1) + '): —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–µ—Ç', 'INFO'); return handleRetryOrFallback(row, step, retryCount, '–†–µ–∑—É–ª—å—Ç–∞—Ç –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤'); }
  if (!isCompletionReady(result.toString())) { addLog('‚è≥ –®–∞–≥ ' + step + ' (–ø–æ–ø—ã—Ç–∫–∞ ' + (retryCount+1) + '): –Ω–µ—Ç —Ñ—Ä–∞–∑—ã –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏', 'INFO'); return handleRetryOrFallback(row, step, retryCount, '–ù–µ—Ç —Ñ—Ä–∞–∑—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è'); }
  addLog('‚úÖ –®–∞–≥ ' + step + ' –∑–∞–≤–µ—Ä—à–µ–Ω', 'INFO');
  saveProcessingStatus(row, step + 1, 0);
  processNextStep();
}
function handleRetryOrFallback(row, step, retryCount, reason) {
  retryCount++;
  if (retryCount >= MAX_RETRY_ATTEMPTS) {
    addLog('üö® –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ —à–∞–≥–µ ' + step + ', –ø—Ä–∏—á–∏–Ω–∞: ' + reason, 'WARN');
    var strategy = decideFallbackStrategy(row, step, reason);
    switch (strategy) {
      case 'SKIP_STEP':
      case 'FORCE_CONTINUE':
        saveProcessingStatus(row, step + 1, 0); processNextStep(); break;
      case 'STOP_CHAIN':
      default:
        clearProcessingStatus(); notifyUser('–ê–≤—Ç–æ—Ü–µ–ø–æ—á–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ ' + MAX_RETRY_ATTEMPTS + ' –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ —à–∞–≥–µ ' + step + '\n–ü—Ä–∏—á–∏–Ω–∞: ' + reason); break;
    }
    return;
  }
  var nextDelay = AUTO_PROCESSING_DELAY + (retryCount * RETRY_DELAY_INCREMENT);
  saveProcessingStatus(row, step, retryCount);
  addLog('üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ #' + (retryCount + 1) + ' —á–µ—Ä–µ–∑ ' + (nextDelay/1000) + ' —Å–µ–∫', 'INFO');
  try { ScriptApp.newTrigger('checkStepCompletion').timeBased().after(nextDelay).create(); }
  catch (e) { addLog('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è retry: ' + e.message, 'ERROR'); }
}
function decideFallbackStrategy(row, step, reason) {
  if (reason === '–†–µ–∑—É–ª—å—Ç–∞—Ç –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤') return 'STOP_CHAIN';
  if (reason === '–ù–µ—Ç —Ñ—Ä–∞–∑—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è') return 'FORCE_CONTINUE';
  return 'STOP_CHAIN';
}
function notifyUser(message) {
  try { SpreadsheetApp.getUi().alert('–ê–≤—Ç–æ—Ü–µ–ø–æ—á–∫–∞: –í–Ω–∏–º–∞–Ω–∏–µ!', message, SpreadsheetApp.getUi().ButtonSet.OK); }
  catch (e) { addLog('‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ' + e.message, 'ERROR'); }
}
function stopAutoProcessingChain() {
  clearProcessingStatus();
  var triggers = ScriptApp.getProjectTriggers();
  var deleted = 0; triggers.forEach(function(t){ if (t.getHandlerFunction() === 'checkStepCompletion') { ScriptApp.deleteTrigger(t); deleted++; } });
  addLog('üõë –ê–≤—Ç–æ—Ü–µ–ø–æ—á–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —É–¥–∞–ª–µ–Ω–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ' + deleted, 'INFO');
}
function getChainStatus() {
  var status = getProcessingStatus();
  if (!status) return '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏';
  var elapsed = Math.floor((new Date().getTime() - status.timestamp) / 1000);
  return '–ê–∫—Ç–∏–≤–Ω–∞ —Ü–µ–ø–æ—á–∫–∞ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ' + status.row + ', —à–∞–≥ ' + status.currentStep + ' (–ø—Ä–æ—à–ª–æ ' + elapsed + ' —Å–µ–∫)';
}

// ====== –ù–û–í–ê–Ø –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –¶–ï–ü–û–ß–ö–ê –¢–û–õ–¨–ö–û –î–õ–Ø A3 (B3..G3) —á–µ—Ä–µ–∑ GM_IF ======
function GM_IF(condition, prompt, maxTokens, temperature, _tick) {
  try {
    var condVal = false;
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤—Ö–æ–¥ –≤ –æ–¥–Ω–æ —Å–∫–∞–ª—è—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    var raw = condition;
    if (Array.isArray(raw)) {
      raw = (raw[0] && raw[0].length ? raw[0][0] : raw[0] || '');
    }
    var t = typeof raw;
    if (t === 'boolean') {
      condVal = raw === true;
    } else if (t === 'number') {
      condVal = raw !== 0;
    } else if (t === 'string') {
      var s = raw.trim().toLowerCase();
      // TRUE/ FALSE –≤ –ª—é–±–æ–π –ª–æ–∫–∞–ª–∏: –ò–°–¢–ò–ù–ê/–õ–û–ñ–¨; —Ç–∞–∫–∂–µ 1/0; –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Üí false
      condVal = (s === 'true' || s === '–∏—Å—Ç–∏–Ω–∞' || s === '1' || s === '–¥–∞');
    } else {
      condVal = !!raw;
    }
    if (!condVal) return "";
    if (Array.isArray(prompt)) prompt = prompt[0][0];
    if (!prompt || typeof prompt !== 'string' || !prompt.trim()) return "";
    if (maxTokens == null) maxTokens = 25000;
    if (temperature == null) temperature = 0.7;
    return GM(prompt, maxTokens, temperature);
  } catch (e) {
    addLog('‚ùå GM_IF –æ—à–∏–±–∫–∞: ' + e.message, 'ERROR');
    return 'Error: ' + e.message;
  }
}
function columnToLetter(column) {
  var temp, letter = '';
  while (column > 0) {
    temp = (column - 1) % 26;
    letter = String.fromCharCode(temp + 65) + letter;
    column = (column - temp - 1) / 26;
  }
  return letter;
}

function letterToColumn(letters) {
  var s = String(letters || '').toUpperCase().trim();
  var col = 0;
  for (var i = 0; i < s.length; i++) {
    col = col * 26 + (s.charCodeAt(i) - 64);
  }
  return col;
}

function parseTargetA1(a1) {
  var raw = String(a1 || '').trim();
  if (!raw) throw new Error('–ü—É—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —è—á–µ–π–∫—É');
  var m = raw.match(/^([^!]+)!([A-Za-z]+)(\d+)$/);
  var sheetName, colLetters, row;
  if (m) {
    sheetName = m[1];
    colLetters = m[2];
    row = parseInt(m[3], 10);
  } else {
    var m2 = raw.match(/^([A-Za-z]+)(\d+)$/);
    if (!m2) throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —è—á–µ–π–∫–∏: ' + raw);
    sheetName = '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞';
    colLetters = m2[1];
    row = parseInt(m2[2], 10);
  }
  if (sheetName !== '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') throw new Error('–û–∂–∏–¥–∞–ª—Å—è –ª–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞", –ø–æ–ª—É—á–µ–Ω–æ: ' + sheetName);
  var col = letterToColumn(colLetters);
  return { sheetName: sheetName, row: row, col: col, a1: (colLetters.toUpperCase() + row) };
}

function prepareChainSmart() {
  var ss = SpreadsheetApp.getActive();
  var prompt = ss.getSheetByName('Prompt_box');
  var hasTargets = false;
  if (prompt) {
    var lastRow = Math.max(2, prompt.getLastRow());
    var vals = prompt.getRange(2, 2, lastRow - 1, 1).getDisplayValues(); // B2:B
    for (var i = 0; i < vals.length; i++) {
      if (String(vals[i][0] || '').trim()) { hasTargets = true; break; }
    }
  }
  if (hasTargets) {
    prepareChainFromPromptBox();
  } else {
    prepareChainForA3();
  }
}

function prepareChainFromPromptBox() {
  var ss = SpreadsheetApp.getActive();
  var prompt = ss.getSheetByName('Prompt_box');
  var pack = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
  if (!prompt) { SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "Prompt_box" –Ω–µ –Ω–∞–π–¥–µ–Ω'); return; }
  if (!pack) { SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω'); return; }

  var lastRow = Math.max(2, prompt.getLastRow());
  var targets = prompt.getRange(2, 2, lastRow - 1, 1).getDisplayValues(); // B2:B ‚Äî —è—á–µ–π–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
  var mappings = [];
  for (var r = 2; r <= lastRow; r++) {
    var targetStr = String(targets[r - 2][0] || '').trim();
    if (!targetStr) continue;
    try {
      var parsed = parseTargetA1(targetStr);
      mappings.push({ promptRow: r, targetRow: parsed.row, targetCol: parsed.col, targetA1: parsed.a1 });
    } catch (e) {
      addLog('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Å—Ç—Ä–æ–∫–∏ Prompt_box!B' + r + ': ' + e.message, 'WARN');
    }
  }

  if (!mappings.length) { SpreadsheetApp.getUi().alert('–ù–µ—Ç —Ü–µ–ª–µ–≤—ã—Ö —è—á–µ–µ–∫ –≤ Prompt_box!B, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ.'); return; }

  var phrase = getCompletionPhrase() || COMPLETION_PHRASE;
  var phraseEscaped = phrase.replace(/"/g, '""');

  for (var i = 0; i < mappings.length; i++) {
    var m = mappings[i];
    var cond;
    if (i === 0) {
      // –í—Å–µ–≥–¥–∞ —è–∫–æ—Ä—å –æ—Ç A3
      cond = '$A3<>""';
    } else {
      var prev = mappings[i - 1];
      cond = 'LEFT(' + prev.targetA1 + ', LEN("' + phraseEscaped + '"))="' + phraseEscaped + '"';
    }
    var formula = '=GM_IF(' + cond + ', Prompt_box!$F$' + m.promptRow + ', 25000, 0.7)';
    pack.getRange(m.targetRow, m.targetCol).setFormula(formula);
    addLog('üìù –§–æ—Ä–º—É–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Üí –†–∞—Å–ø–∞–∫–æ–≤–∫–∞!' + m.targetA1 + ' –∏–∑ Prompt_box!F' + m.promptRow, 'INFO');
  }

  SpreadsheetApp.getUi().alert('‚úÖ –ì–æ—Ç–æ–≤–æ: —Ñ–æ—Ä–º—É–ª—ã —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–æ —Ü–µ–ª—è–º –∏–∑ Prompt_box!B.
–ü–µ—Ä–≤–∞—è —è—á–µ–π–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ A-—Å—Ç–æ–ª–±—Ü–∞, –¥–∞–ª–µ–µ ‚Äî –ø–æ —Ñ—Ä–∞–∑–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.');
}
function prepareChainForA3() {
  var ss = SpreadsheetApp.getActive();
  var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
  if (!sheet) { SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω'); return; }
  var row = 3;
  var startCol = 2; // B
  var steps = 6;    // B..G
  var endCol = startCol + steps - 1;
  var phrase = getCompletionPhrase() || COMPLETION_PHRASE;
  var phraseEscaped = phrase.replace(/"/g, '""');

  for (var col = startCol; col <= endCol; col++) {
    var stepIndex = col - 1;       // B=1 -> —à–∞–≥ 1
    var promptRow = stepIndex + 1; // —à–∞–≥ 1 -> F2 ... —à–∞–≥ 6 -> F7
    var target = sheet.getRange(row, col);
    var promptRef = 'Prompt_box!$F$' + promptRow;
    var formula;
    if (col === 2) {
      formula = '=GM_IF($A3<>"", ' + promptRef + ', 25000, 0.7)';
    } else {
      var prevColLetter = columnToLetter(col - 1);
      formula = '=GM_IF(LEFT(' + prevColLetter + '3, LEN("' + phraseEscaped + '"))="' + phraseEscaped + '", ' + promptRef + ', 25000, 0.7)';
    }
    target.setFormula(formula);
    addLog('üìù –§–æ—Ä–º—É–ª–∞ ' + target.getA1Notation() + ' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', 'DEBUG');
  }
  SpreadsheetApp.getUi().alert('‚úÖ –ì–æ—Ç–æ–≤–æ: —Ñ–æ—Ä–º—É–ª—ã B3..G3 –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω—ã.\n–ó–∞–ø–æ–ª–Ω–∏—Ç–µ A3 ‚Äî —à–∞–≥–∏ –ø–æ–π–¥—É—Ç –ø–æ –æ—á–µ—Ä–µ–¥–∏.');
}
function clearChainForA3() {
  var ss = SpreadsheetApp.getActive();
  var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
  if (!sheet) { SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω'); return; }
  sheet.getRange(3, 2, 1, 6).clearContent(); // B3..G3
  SpreadsheetApp.getUi().alert('üßπ –û—á–∏—â–µ–Ω–æ: B3..G3');
}

// ====== VK PARSER + —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ======
function importVkPosts() {
  addLog('‚Üí –ò–º–ø–æ—Ä—Ç VK-–ø–æ—Å—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π', 'INFO');
  var ss = SpreadsheetApp.getActive();
  var params = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
  if (!params) { addLog('‚ùå –ù–µ—Ç –ª–∏—Å—Ç–∞ "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã"', 'ERROR'); SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω!'); return; }
  var owner = params.getRange('B1').getValue();
  var count = params.getRange('B2').getValue();
  if (!owner || !count) { addLog('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã owner –∏–ª–∏ count', 'ERROR'); SpreadsheetApp.getUi().alert('–í–≤–µ–¥–∏—Ç–µ owner –∏ count –Ω–∞ –ª–∏—Å—Ç–µ "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã"'); return; }
  var url = VK_PARSER_URL + '?owner=' + encodeURIComponent(owner) + '&count=' + encodeURIComponent(count);
  try {
    var resp = UrlFetchApp.fetch(url);
    var arr = JSON.parse(resp.getContentText());
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ VK: ' + e.message, 'ERROR');
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ VK Parser: ' + e);
    return;
  }
  if (!Array.isArray(arr)) { addLog('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –æ—Ç VK', 'ERROR'); SpreadsheetApp.getUi().alert('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç VK Parser'); return; }

  var headers = [
    '–î–∞—Ç–∞', '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç', '–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞', '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞',
    '–°—Ç–æ–ø-—Å–ª–æ–≤–∞', '–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã', '–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä',
    '–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Å–ª–æ–≤–∞', '–ü–æ—Å—Ç—ã —Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏', '–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä (–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ)'
  ];
  var out = [headers];
  arr.forEach(function(o, i) {
    var number = o.number !== undefined ? o.number : i + 1;
    out.push([o.date, o.link, o.text, number, '', '', '', '', '', '']);
  });

  var sheet = ss.getSheetByName('–ø–æ—Å—Ç—ã');
  if (!sheet) { addLog('‚ùå –õ–∏—Å—Ç "–ø–æ—Å—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω!', 'ERROR'); SpreadsheetApp.getUi().alert('–°–æ–∑–¥–∞–π—Ç–µ –ª–∏—Å—Ç "–ø–æ—Å—Ç—ã".'); return; }

  sheet.clear();
  sheet.getRange(1, 1, out.length, headers.length).setValues(out);
  applyUniformFormatting(sheet);
  createStopWordsFormulas(sheet, out.length);
  addLog('‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ' + (out.length-1) + ' –ø–æ—Å—Ç–æ–≤', 'INFO');
  SpreadsheetApp.getUi().alert('–ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω: ' + (out.length - 1) + ' –ø–æ—Å—Ç–æ–≤. –§–æ—Ä–º—É–ª—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.');
}
function createStopWordsFormulas(sheet, totalRows) {
  try {
    addLog('‚Üí –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏', 'INFO');
    var stopWordsRange = '$E$2:$E$100';
    for (var row = 2; row <= totalRows; row++) {
      var formulaF = '=IF(SUMPRODUCT(--(ISNUMBER(SEARCH(' + stopWordsRange + ', C' + row + ')))*(' + stopWordsRange + '<>"")) > 0, "", C' + row + ')';
      sheet.getRange(row, 6).setFormula(formulaF); // F
      var formulaG = '=IF(F' + row + '<>"", COUNTA(F$2:F' + row + '), "")';
      sheet.getRange(row, 7).setFormula(formulaG); // G
    }
    var positiveWordsRange = '$H$2:$H$100';
    for (var row = 2; row <= totalRows; row++) {
      var formulaI = '=IF(SUMPRODUCT(--(ISNUMBER(SEARCH(' + positiveWordsRange + ', C' + row + ')))*(' + positiveWordsRange + '<>"")) > 0, C' + row + ', "")';
      sheet.getRange(row, 9).setFormula(formulaI); // I
      var formulaJ = '=IF(I' + row + '<>"", COUNTA(I$2:I' + row + '), "")';
      sheet.getRange(row, 10).setFormula(formulaJ); // J
    }
    sheet.getRange(1, 5, 1, 3).setFontWeight('bold').setBackground('#FFF2CC');
    sheet.getRange(1, 8, 1, 3).setFontWeight('bold').setBackground('#D9EAD3');
    sheet.autoResizeColumns(5, 6);
    addLog('‚úÖ –§–æ—Ä–º—É–ª—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã', 'INFO');
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—É–ª: ' + e.message, 'ERROR');
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—É–ª: ' + e.message);
  }
}
function testStopWordsFilter() {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheet = ss.getSheetByName('–ø–æ—Å—Ç—ã');
    if (!sheet) { SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–ø–æ—Å—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω'); return; }
    sheet.getRange(2, 5).setValue('–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è');
    sheet.getRange(3, 5).setValue('–ø—Å–∏—Ö–æ–ª–æ–≥');
    SpreadsheetApp.flush();
    var filtered2 = sheet.getRange(2, 6).getValue();
    var filtered3 = sheet.getRange(3, 6).getValue();
    var number2 = sheet.getRange(2, 7).getValue();
    var number3 = sheet.getRange(3, 7).getValue();
    var message = '–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:\n\n' +
      '–°—Ç—Ä–æ–∫–∞ 2: ' + (filtered2 ? '–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è' : '—Å–∫—Ä—ã—Ç–æ') + ', –Ω–æ–º–µ—Ä: ' + (number2 || '‚Äî') + '\n' +
      '–°—Ç—Ä–æ–∫–∞ 3: ' + (filtered3 ? '–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è' : '—Å–∫—Ä—ã—Ç–æ') + ', –Ω–æ–º–µ—Ä: ' + (number3 || '‚Äî');
    SpreadsheetApp.getUi().alert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞', message, SpreadsheetApp.getUi().ButtonSet.OK);
    addLog('‚úÖ –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω', 'INFO');
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ' + e.message, 'ERROR');
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ' + e.message);
  }
}

// ====== GEMINI (—Å –∞–≤—Ç–æ Markdown-–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º) ======
function getGeminiApiKey() {
  var key = PropertiesService.getScriptProperties().getProperty('GEMINI_API_KEY');
  if (!key) throw new Error('API-–∫–ª—é—á Gemini –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ú–µ–Ω—é: ü§ñ Table AI ‚Üí –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á Gemini');
  return key;
}
// ====== –ö–≠–® –î–õ–Ø GM ======
function gmCacheKey_(prompt, maxTokens, temperature) {
  try {
    var s = 'p:' + String(prompt) + '|mx:' + String(maxTokens) + '|t:' + String(temperature);
    var bytes = Utilities.computeDigest(Utilities.DigestAlgorithm.SHA_256, s);
    var hex = '';
    for (var i = 0; i < bytes.length; i++) {
      var v = (bytes[i] & 0xFF).toString(16);
      if (v.length === 1) v = '0' + v;
      hex += v;
    }
    return 'gm:' + hex.substring(0, 64);
  } catch (e) {
    return 'gm:fallback:' + (String(prompt).length) + ':' + String(maxTokens) + ':' + String(temperature);
  }
}
function gmCacheGet_(key) {
  try { return CacheService.getScriptCache().get(key); } catch (e) { return null; }
}
function gmCachePut_(key, value, ttlSec) {
  try {
    var ttl = Math.max(5, Math.min(21600, Math.floor(ttlSec || 300)));
    CacheService.getScriptCache().put(key, value, ttl);
  } catch (e) {}
}
function GM(prompt, maxTokens = 25000, temperature = 0.7) {
  addLog('‚Üí GM: prompt=' + (prompt ? prompt.slice(0,60)+'...' : '–Ω–µ—Ç') + ' (' + (prompt ? prompt.length : 0) + ')', 'INFO');
  if (!prompt || typeof prompt !== 'string') throw new Error('–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.');
  if (prompt.length > 50000) throw new Error('–ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 50000 —Å–∏–º–≤–æ–ª–æ–≤.');

  var apiKey = getGeminiApiKey();
  var requestBody = {
    contents: [{ parts: [{ text: prompt }] }],
    generationConfig: { maxOutputTokens: maxTokens, temperature: temperature }
  };
  var options = {
    method: 'POST',
    contentType: 'application/json',
    payload: JSON.stringify(requestBody),
    muteHttpExceptions: true
  };

  try {
    var response = UrlFetchApp.fetch(GEMINI_API_URL + '?key=' + apiKey, options);
    var responseData = JSON.parse(response.getContentText());
    addLog('‚Üê GM: HTTP ' + response.getResponseCode(), 'DEBUG');
    if (response.getResponseCode() !== 200) {
      var message = responseData.error && responseData.error.message ? responseData.error.message : 'Unknown error';
      addLog('‚ùå GM API –æ—à–∏–±–∫–∞: ' + message, 'ERROR');
      return 'Error: ' + message;
    }
    var candidate = responseData.candidates && responseData.candidates[0];
    var content = candidate && candidate.content && candidate.content.parts && candidate.content.parts[0];
    var result = content && content.text ? content.text : '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö';
    var processedResult = processGeminiResponse(result);
    addLog('‚úÖ GM: —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –¥–ª–∏–Ω–∞=' + result.length + (processedResult !== result ? ', –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –∏–∑ Markdown' : ''), 'INFO');
    return processedResult;
  } catch (error) {
    addLog('‚ùå GM –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: ' + error.message, 'ERROR');
    return 'Error: ' + error.message;
  }
}
function initGeminiKey() {
  var ui = SpreadsheetApp.getUi();
  var help = '–ì–¥–µ –≤–∑—è—Ç—å –∫–ª—é—á (–∫–æ—Ä–æ—Ç–∫–æ):\n' +
             '1) –û—Ç–∫—Ä–æ–π—Ç–µ: https://aistudio.google.com/app/apikey\n' +
             '2) –ù–∞–∂–º–∏—Ç–µ ‚ÄúCreate API key‚Äù\n' +
             '3) –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á\n\n' +
             '–í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ –ø–æ–ª–µ –Ω–∏–∂–µ –∏ –Ω–∞–∂–º–∏—Ç–µ OK';
  var res = ui.prompt('üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á', help, ui.ButtonSet.OK_CANCEL);
  if (res.getSelectedButton() !== ui.Button.OK) return;
  var key = (res.getResponseText() || '').trim();
  if (key) {
    PropertiesService.getScriptProperties().setProperty('GEMINI_API_KEY', key);
    ui.alert('‚úÖ –ö–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    addLog('‚úÖ –ù–æ–≤—ã–π API –∫–ª—é—á Gemini —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'INFO');
  } else {
    ui.alert('‚ùå –ö–ª—é—á –Ω–µ –≤–≤–µ–¥—ë–Ω.');
    addLog('‚ùå Gemini: –∫–ª—é—á –Ω–µ –≤–≤–µ–¥—ë–Ω', 'WARN');
  }
}
function showGeminiKeyHelp() {
  var ui = SpreadsheetApp.getUi();
  var msg =
    '–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á Gemini:\n\n' +
    '1) –û—Ç–∫—Ä–æ–π—Ç–µ Google AI Studio: https://aistudio.google.com/app/apikey\n' +
    '2) –ù–∞–∂–º–∏—Ç–µ "Create API key" (—Å–æ–∑–¥–∞—Ç—å –∫–ª—é—á)\n' +
    '3) –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á\n' +
    '4) –ú–µ–Ω—é: üîë Gemini ‚Üí "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á" ‚Üí –≤—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á\n\n' +
    '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://ai.google.dev/gemini-api/docs/api-key?hl=ru';
  ui.alert('‚ùì –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á Gemini', msg, ui.ButtonSet.OK);
}
function refreshSelectedGMTriggers() {
  var ss = SpreadsheetApp.getActive();
  var paramsSheet = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
  if (!paramsSheet) return;
  var activeCell = ss.getActiveRange();
  var cell = activeCell.getCell(1, 1);
  var row = cell.getRow();
  var triggerCell = paramsSheet.getRange(row, 26); // Z
  var current = triggerCell.getValue();
  triggerCell.setValue(current ? "" : ".");
  addLog('üîÑ GM —Ç—Ä–∏–≥–≥–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ' + row, 'DEBUG');
}

// ====== –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ======
function applyUniformFormatting(sheet) {
  try {
    var range = sheet.getDataRange();
    range.setFontFamily('Arial')
         .setFontSize(10)
         .setVerticalAlignment('middle')
         .setHorizontalAlignment('left');
    addLog('‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ –ª–∏—Å—Ç—É ' + sheet.getName(), 'DEBUG');
  } catch (e) {
    addLog('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∞ ' + sheet.getName() + ': ' + e.message, 'WARN');
  }
}

// ====== –ú–µ–Ω—é ======
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('ü§ñ Table AI')
    .addItem('‚ñ∂Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—ã (—É–º–Ω—ã–π —Ä–µ–∂–∏–º)', 'prepareChainSmart')
    .addItem('üîÅ –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —è—á–µ–π–∫—É (GM)', 'refreshCurrentGMCell')
    .addSeparator()
    .addItem('üßπ –û—á–∏—Å—Ç–∏—Ç—å B3..G3', 'clearChainForA3')
    .addSeparator()
    .addItem('üì• –ò–º–ø–æ—Ä—Ç VK –ø–æ—Å—Ç–æ–≤', 'importVkPosts')
    .addItem('üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á Gemini', 'initGeminiKey')
    .addItem('üìù –§—Ä–∞–∑–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (–∏–∑–º–µ–Ω–∏—Ç—å)', 'setCompletionPhraseUI')
    .addItem('üñºÔ∏è OCR –æ—Ç–∑—ã–≤–æ–≤ (A‚ÜíB)', 'ocrReviews')
    .addItem('üñºÔ∏è OCR V2 (A‚ÜíB)', 'ocrRun')
    .addSubMenu(ui.createMenu('üîê –õ–∏—Ü–µ–Ω–∑–∏—è')
      .addItem('–í–≤–µ—Å—Ç–∏ Email + –¢–æ–∫–µ–Ω', 'setLicenseCredentialsUI')
      .addItem('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å', 'checkLicenseStatusUI')
    )
    .addToUi();

  if (DEV_MODE) {
    ui.createMenu('üß∞ DEV')
      .addItem('üìù –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏', 'showLogsDialog')
      .addItem('‚¨áÔ∏è –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤', 'exportLogsToSheet')
      .addItem('üóë –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏', 'clearLogs')
      .addToUi();
  }

  // –£–±—Ä–∞–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à—É—é ¬´–≥–æ—Ä—è—á—É—é –∫–Ω–æ–ø–∫—É¬ª (setupOcrHotButton) –ø–æ –ø—Ä–æ—Å—å–±–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

// –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π GM-—è—á–µ–π–∫–∏: –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Ñ–æ—Ä–º—É–ª—É, —á—Ç–æ–±—ã –∑–∞–Ω–æ–≤–æ –≤—ã–∑–≤–∞—Ç—å Gemini
function refreshCurrentGMCell() {
  try {
    var ss = SpreadsheetApp.getActive();
    var range = ss.getActiveRange();
    if (!range) { SpreadsheetApp.getUi().alert('–í—ã–±–µ—Ä–∏—Ç–µ —è—á–µ–π–∫—É –Ω–∞ –ª–∏—Å—Ç–µ "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞"'); return; }
    var cell = range.getCell(1, 1);
    var sheet = cell.getSheet();
    if (sheet.getName() !== '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') { SpreadsheetApp.getUi().alert('–í—ã–±–µ—Ä–∏—Ç–µ —è—á–µ–π–∫—É –Ω–∞ –ª–∏—Å—Ç–µ "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞"'); return; }
    var row = cell.getRow();
    var col = cell.getColumn();

    var formula = cell.getFormula();
    var hasGm = formula && (/^\s*=\s*GM_IF\s*\(/i.test(formula) || /\bGM\s*\(/i.test(formula));
    if (!hasGm) {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —ç—Ç–æ–π —è—á–µ–π–∫–∏ –≤ Prompt_box!B (—É–º–Ω—ã–π —Ä–µ–∂–∏–º)
      var promptSheet = ss.getSheetByName('Prompt_box');
      if (promptSheet) {
        var lastRow = Math.max(2, promptSheet.getLastRow());
        var targets = promptSheet.getRange(2, 2, lastRow - 1, 1).getDisplayValues(); // B2:B
        var mappings = [];
        for (var r = 2; r <= lastRow; r++) {
          var tstr = String(targets[r - 2][0] || '').trim();
          if (!tstr) continue;
          try {
            var parsed = parseTargetA1(tstr);
            mappings.push({ promptRow: r, targetA1: parsed.a1, targetRow: parsed.row, targetCol: parsed.col });
          } catch (e) {}
        }
        if (mappings.length) {
          var currentA1 = columnToLetter(col) + row;
          var idx = -1;
          for (var i = 0; i < mappings.length; i++) {
            if (mappings[i].targetA1 === currentA1) { idx = i; break; }
          }
          if (idx >= 0) {
            var phrase = getCompletionPhrase() || COMPLETION_PHRASE;
            var phraseEscaped = phrase.replace(/"/g, '""');
            var cond;
            if (idx === 0) {
              cond = '$A3<>""';
            } else {
              var prev = mappings[idx - 1];
              cond = 'LEFT(' + prev.targetA1 + ', LEN("' + phraseEscaped + '"))="' + phraseEscaped + '"';
            }
            var promptRef = 'Prompt_box!$F$' + mappings[idx].promptRow;
            formula = '=GM_IF(' + cond + ', ' + promptRef + ', 25000, 0.7)';
          }
        }
      }
    }
    if (!formula) { SpreadsheetApp.getUi().alert('–ù–µ—á–µ–≥–æ –æ–±–Ω–æ–≤–ª—è—Ç—å: –≤ —è—á–µ–π–∫–µ –Ω–µ—Ç GM-—Ñ–æ—Ä–º—É–ª—ã –∏ –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ Prompt_box!B'); return; }

    cell.clearContent();
    SpreadsheetApp.flush();
    Utilities.sleep(50);
    cell.setFormula(formula);
    SpreadsheetApp.flush();
    addLog('üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —è—á–µ–π–∫–∞ ' + cell.getA1Notation(), 'INFO');
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —è—á–µ–π–∫–∏: ' + e.message, 'ERROR');
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + e.message);
  }
}

// ====== –¢–µ—Å—Ç Markdown ======
function testMarkdownConversion() {
  var md = '# –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤\n\n**–°–ø–∏—Å–æ–∫**:\n- –æ–¥–∏–Ω\n- –¥–≤–∞\n\n`–∫–æ–¥`\n\n[—Å—Å—ã–ª–∫–∞](https://example.com)\n';
  var converted = convertMarkdownToReadableText(md);
  SpreadsheetApp.getUi().alert('–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Markdown', '–ò—Å—Ö–æ–¥–Ω—ã–π:\n' + md + '\n\n–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π:\n' + converted, SpreadsheetApp.getUi().ButtonSet.OK);
}

// ====== onEdit: –∞–≤—Ç–æ-–æ—á–∏—Å—Ç–∫–∞ Markdown –¥–ª—è —Å—Ç—Ä–æ–∫–∏ 3 (B..G) ======
function onEdit(e) {
  var range = e.range;
  var sheet = range.getSheet();
  var sheetName = sheet.getName();
  var col = range.getColumn();
  var row = range.getRow();

  if (sheetName === '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') {
    if (row === 3 && col > 1 && e.value && typeof e.value === 'string') {
      var processed = processGeminiResponse(e.value);
      if (processed !== e.value) {
        range.setValue(processed);
        addLog('üîÑ –ê–≤—Ç–æ–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Markdown –≤ ' + range.getA1Notation(), 'INFO');
      }
    }
  }

  // –£–±—Ä–∞–Ω —Ä–µ–∂–∏–º B1-—á–µ–∫–±–æ–∫—Å–∞ –ø–æ –ø—Ä–æ—Å—å–±–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Ä–∏—Å—É–Ω–æ–∫ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
}

// –ì–æ—Ä—è—á–∞—è –∫–Ω–æ–ø–∫–∞ —Ç–µ–ø–µ—Ä—å —á–µ—Ä–µ–∑ —Ä–∏—Å—É–Ω–æ–∫ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π ocrReviews

// ====== DEV: –ê–≤—Ç–æ—Ç–µ—Å—Ç—ã (–Ω–µ –≤–∫–ª—é—á–∞—Ç—å –≤ –ø—Ä–æ–¥—É–∫—Ç: DEV_MODE=false) ======
function runDevSelfTest() {
  var failures = [];
  try {
    // 1) columnToLetter
    var map = {1:'A',2:'B',7:'G',26:'Z',27:'AA',28:'AB'};
    Object.keys(map).forEach(k => {
      var got = columnToLetter(parseInt(k,10));
      if (got !== map[k]) failures.push('columnToLetter(' + k + ') ‚Üí ' + got + ' (–æ–∂–∏–¥–∞–ª–æ—Å—å ' + map[k] + ')');
    });

    // 2) Markdown detection & conversion
    var md = '**bold**\n- a\n- b\n';
    if (!isMarkdownText(md)) failures.push('isMarkdownText –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª MD');
    var conv = convertMarkdownToReadableText(md);
    if (!conv || conv.indexOf('BOLD') === -1) failures.push('convertMarkdownToReadableText –Ω–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª **bold** ‚Üí BOLD');

    // 3) GM_IF sleep behavior
    var r = GM_IF(false, 'no-call');
    if (r !== '') failures.push('GM_IF –ø—Ä–∏ false —É—Å–ª–æ–≤–∏–∏ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—É—Å—Ç–æ');

    // 4) –§–æ—Ä–º—É–ª—ã –¥–ª—è A3 (–Ω–µ —Ç—Ä–æ–≥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞–≤—è—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)
    var ss = SpreadsheetApp.getActive();
    var existed = !!ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
    var rSheet = existed ? ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') : ss.insertSheet('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
    var snapshot = [];
    for (var c=2;c<=7;c++){ snapshot.push(rSheet.getRange(3,c).getFormula()); }
    prepareChainForA3();
    var expectedB3 = '=GM_IF($A3<>"", Prompt_box!$F$2, 12500, 0.7)';
    var gotB3 = rSheet.getRange(3,2).getFormula();
    if (gotB3 !== expectedB3) failures.push('B3 —Ñ–æ—Ä–º—É–ª–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: '+gotB3);
    clearChainForA3();
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–∂–Ω–∏—Ö —Ñ–æ—Ä–º—É–ª
    for (var c2=2;c2<=7;c2++){ if (snapshot[c2-2]) rSheet.getRange(3,c2).setFormula(snapshot[c2-2]); }
    if (!existed) ss.deleteSheet(rSheet);

    // 5) –£–º–Ω—ã–π —Ä–µ–∂–∏–º: Prompt_box!B2:B3 ‚Üí B3,C3 —Å —è–∫–æ—Ä–µ–º –æ—Ç A3
    var pbExisted = !!ss.getSheetByName('Prompt_box');
    var pb = pbExisted ? ss.getSheetByName('Prompt_box') : ss.insertSheet('Prompt_box');
    var bSnap = pb.getRange(2, 2, 2, 1).getDisplayValues(); // B2:B3
    var fSnap = pb.getRange(2, 6, 2, 1).getFormulas();      // F2:F3
    pb.getRange(2, 2).setValue('B3');
    pb.getRange(3, 2).setValue('C3');
    pb.getRange(2, 6).setFormula('="P1"');
    pb.getRange(3, 6).setFormula('="P2"');

    var rSheet2 = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') || ss.insertSheet('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
    var b3Before = rSheet2.getRange(3, 2).getFormula();
    var c3Before = rSheet2.getRange(3, 3).getFormula();

    prepareChainSmart();

    var phrase2 = getCompletionPhrase() || COMPLETION_PHRASE;
    var phraseEsc2 = phrase2.replace(/"/g, '""');
    var expB3 = '=GM_IF($A3<>"", Prompt_box!$F$2, 12500, 0.7)';
    var expC3 = '=GM_IF(LEFT(B3, LEN("' + phraseEsc2 + '"))="' + phraseEsc2 + '", Prompt_box!$F$3, 12500, 0.7)';
    var gotB3_2 = rSheet2.getRange(3, 2).getFormula();
    var gotC3_2 = rSheet2.getRange(3, 3).getFormula();
    if (gotB3_2 !== expB3) failures.push('Smart-—Ä–µ–∂–∏–º: —Ñ–æ—Ä–º—É–ª–∞ B3 –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: ' + gotB3_2);
    if (gotC3_2 !== expC3) failures.push('Smart-—Ä–µ–∂–∏–º: —Ñ–æ—Ä–º—É–ª–∞ C3 –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: ' + gotC3_2);

    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (b3Before) rSheet2.getRange(3,2).setFormula(b3Before); else rSheet2.getRange(3,2).clearContent();
    if (c3Before) rSheet2.getRange(3,3).setFormula(c3Before); else rSheet2.getRange(3,3).clearContent();
    pb.getRange(2, 2, 2, 1).setValues(bSnap);
    pb.getRange(2, 6, 2, 1).setFormulas(fSnap);
    if (!pbExisted) ss.deleteSheet(pb);
  } catch (e) {
    failures.push('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤: '+e.message);
  }

  if (failures.length) {
    addLog('‚ùå DEV-—Ç–µ—Å—Ç—ã: –ø—Ä–æ–≤–∞–ª–µ–Ω–æ '+failures.length+' –ø—É–Ω–∫—Ç(–æ–≤)\n'+failures.join('\n'), 'ERROR');
    SpreadsheetApp.getUi().alert('‚ùå DEV-—Ç–µ—Å—Ç—ã: –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã', failures.join('\n'));
  } else {
    addLog('‚úÖ DEV-—Ç–µ—Å—Ç—ã: –≤—Å—ë –∑–µ–ª—ë–Ω–æ–µ', 'INFO');
    SpreadsheetApp.getUi().alert('‚úÖ DEV-—Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã');
  }
}

// ===== LICENSE & SERVER PROXY (patch) =====
function getLicenseEmail() {
  return PropertiesService.getScriptProperties().getProperty('LICENSE_EMAIL') || '';
}
function getLicenseToken() {
  return PropertiesService.getScriptProperties().getProperty('LICENSE_TOKEN') || '';
}
function setLicenseCredentialsUI() {
  var ui = SpreadsheetApp.getUi();
  var curEmail = getLicenseEmail();
  var curToken = getLicenseToken();
  var emailRes = ui.prompt('üîê –õ–∏—Ü–µ–Ω–∑–∏—è ‚Äî Email', '–í–≤–µ–¥–∏—Ç–µ Email (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏). –¢–µ–∫—É—â–∏–π: ' + (curEmail || '‚Äî'), ui.ButtonSet.OK_CANCEL);
  if (emailRes.getSelectedButton() !== ui.Button.OK) return;
  var email = (emailRes.getResponseText() || '').trim();
  var tokenRes = ui.prompt('üîê –õ–∏—Ü–µ–Ω–∑–∏—è ‚Äî –¢–æ–∫–µ–Ω', '–í–≤–µ–¥–∏—Ç–µ –¢–æ–∫–µ–Ω (–∏–∑ —Ç–∞–±–ª–∏—Ü—ã –ª–∏—Ü–µ–Ω–∑–∏–π). –¢–µ–∫—É—â–∏–π: ' + (curToken ? (curToken.substring(0,4)+'****') : '‚Äî'), ui.ButtonSet.OK_CANCEL);
  if (tokenRes.getSelectedButton() !== ui.Button.OK) return;
  var token = (tokenRes.getResponseText() || '').trim();
  if (!email || !token) { ui.alert('Email –∏ –¢–æ–∫–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.'); return; }
  PropertiesService.getScriptProperties().setProperty('LICENSE_EMAIL', email);
  PropertiesService.getScriptProperties().setProperty('LICENSE_TOKEN', token);
  ui.alert('‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.');
}
function serverStatus_() {
  var email = getLicenseEmail();
  var token = getLicenseToken();
  var payload = { action: 'status', email: email, token: token };
  var options = { method: 'post', contentType: 'application/json', payload: JSON.stringify(payload), muteHttpExceptions: true };
  var resp = UrlFetchApp.fetch(SERVER_URL, options);
  var code = resp.getResponseCode();
  var data = JSON.parse(resp.getContentText());
  if (code !== 200) return { ok: false, error: (data && data.error) || ('HTTP_' + code) };
  return data;
}
function checkLicenseStatusUI() {
  try {
    var st = serverStatus_();
    if (st.ok) SpreadsheetApp.getUi().alert('–õ–∏—Ü–µ–Ω–∑–∏—è', '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' + (st.until ? (' –¥–æ ' + st.until) : ''), SpreadsheetApp.getUi().ButtonSet.OK);
    else SpreadsheetApp.getUi().alert('–õ–∏—Ü–µ–Ω–∑–∏—è', '‚ùå ' + (st.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'), SpreadsheetApp.getUi().ButtonSet.OK);
  } catch (e) { SpreadsheetApp.getUi().alert('–õ–∏—Ü–µ–Ω–∑–∏—è', '–û—à–∏–±–∫–∞: ' + e.message, SpreadsheetApp.getUi().ButtonSet.OK); }
}
function serverGM_(prompt, maxTokens, temperature) {
  var email = getLicenseEmail();
  var token = getLicenseToken();
  var apiKey = getGeminiApiKey();
  var payload = { action: 'gm', email: email, token: token, apiKey: apiKey, prompt: prompt, maxTokens: maxTokens, temperature: temperature };
  var options = { method: 'post', contentType: 'application/json', payload: JSON.stringify(payload), muteHttpExceptions: true };
  var resp = UrlFetchApp.fetch(SERVER_URL, options);
  var code = resp.getResponseCode();
  var data = JSON.parse(resp.getContentText());
  if (code !== 200) return { ok: false, error: (data && data.error) || ('HTTP_' + code) };
  return data;
}
function GM(prompt, maxTokens, temperature) {
  // –õ–∏—Ü–µ–Ω–∑–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –≤—Å–µ–≥–¥–∞: –∏ –≤ PROD, –∏ –≤ DEV. –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π email/token ‚Äî –±–ª–æ–∫–∏—Ä—É–µ–º.
  try {
    var _email = getLicenseEmail();
    var _token = getLicenseToken();
    if (!_email || !_token) {
      addLog('üö´ –û—Ç–∫–∞–∑: –ª–∏—Ü–µ–Ω–∑–∏—è –Ω–µ –∑–∞–¥–∞–Ω–∞ (email/token –ø—É—Å—Ç—ã–µ)', 'WARN');
      return 'Error: LICENSE_REQUIRED';
    }
    var st0 = serverStatus_();
    if (!st0 || !st0.ok) {
      addLog('üö´ –û—Ç–∫–∞–∑: –ª–∏—Ü–µ–Ω–∑–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'WARN');
      return 'Error: LICENSE_OR_SERVER';
    }
  } catch (eLic) {
    addLog('üö´ –û—Ç–∫–∞–∑: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏: ' + eLic.message, 'WARN');
    return 'Error: LICENSE_CHECK_FAILED';
  }

  if (maxTokens == null) maxTokens = 25000;
  if (temperature == null) temperature = 0.7;
  addLog('‚Üí GM (proxy): prompt=' + (prompt ? prompt.slice(0,60)+'...' : '–Ω–µ—Ç') + ' (' + (prompt ? prompt.length : 0) + ')', 'INFO');
  if (!prompt || typeof prompt !== 'string') throw new Error('–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.');
  if (prompt.length > 50000) throw new Error('–ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 50000 —Å–∏–º–≤–æ–ª–æ–≤.');
  var key = gmCacheKey_(prompt, maxTokens, temperature);
  var cached = gmCacheGet_(key); if (cached) { addLog('‚ö° GM cache-hit', 'DEBUG'); return cached; }
  var errKey = 'gm_err:' + key;
  var lastErr = gmCacheGet_(errKey); if (lastErr) { addLog('‚è≥ GM last-error cached, skip call', 'DEBUG'); return lastErr; }
  var ok = false, text = '', serr = null;
  try {
    var r = serverGM_(prompt, maxTokens, temperature);
    if (r && r.ok) { ok = true; text = r.data || ''; }
    else { serr = (r && r.error) || 'SERVER_ERROR'; }
  } catch (e) { serr = e.message; }
  if (ok) {
    var processed = processGeminiResponse(text);
    gmCachePut_(key, processed, 21600);
    return processed;
  }
  if (DEV_MODE) {
    addLog('‚ö†Ô∏è DEV fallback ‚Üí –ø—Ä—è–º–æ–π Gemini. –ü—Ä–∏—á–∏–Ω–∞: ' + (serr || 'UNKNOWN'), 'WARN');
    try {
      var apiKey = getGeminiApiKey();
      var body = { contents: [{ parts: [{ text: prompt }] }], generationConfig: { maxOutputTokens: maxTokens, temperature: temperature } };
      var options = { method: 'POST', contentType: 'application/json', payload: JSON.stringify(body), muteHttpExceptions: true };
      var resp = UrlFetchApp.fetch(GEMINI_API_URL + '?key=' + apiKey, options);
      var code = resp.getResponseCode();
      var data = JSON.parse(resp.getContentText());
      addLog('‚Üê GM (direct): HTTP ' + code, 'DEBUG');
      if (code !== 200) {
        var message = data && data.error && data.error.message ? data.error.message : 'Unknown error';
        var msg = 'Error: ' + message;
        gmCachePut_(errKey, msg, 60);
        return msg;
      }
      var candidate = data.candidates && data.candidates[0];
      var content = candidate && candidate.content && candidate.content.parts && candidate.content.parts[0];
      var txt = content && content.text ? content.text : '';
      var processed2 = processGeminiResponse(txt);
      gmCachePut_(key, processed2, 21600);
      return processed2;
    } catch (e2) {
      var em = 'Error: ' + e2.message;
      gmCachePut_(errKey, em, 60);
      return em;
    }
  }
  var msg = 'Error: ' + (serr || 'LICENSE_OR_SERVER');
  gmCachePut_(errKey, msg, 60);
  return msg;
}
