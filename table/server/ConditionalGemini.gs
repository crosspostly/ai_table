/**\r
 * Conditional Gemini Service\r
 * GM_IF —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å–ª–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π\r
 */\r
\r
/**\r
 * –£—Å–ª–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Gemini - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ\r
 */\r
function GM_IF(condition, prompt, maxTokens, temperature, _tick) {\r
  try {\r
    var condVal = false;\r
    \r
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤—Ö–æ–¥ –≤ –æ–¥–Ω–æ —Å–∫–∞–ª—è—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\r
    var raw = condition;\r
    if (Array.isArray(raw)) {\r
      raw = (raw[0] && raw[0].length ? raw[0][0] : raw[0] || '');\r
    }\r
    \r
    var t = typeof raw;\r
    if (t === 'boolean') {\r
      condVal = raw === true;\r
    } else if (t === 'number') {\r
      condVal = raw !== 0;\r
    } else if (t === 'string') {\r
      var s = raw.trim().toLowerCase();\r
      // TRUE/FALSE –≤ –ª—é–±–æ–π –ª–æ–∫–∞–ª–∏: –ò–°–¢–ò–ù–ê/–õ–û–ñ–¨; —Ç–∞–∫–∂–µ 1/0; –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Üí false\r
      condVal = (s === 'true' || s === '–∏—Å—Ç–∏–Ω–∞' || s === '1' || s === '–¥–∞');\r
    } else {\r
      condVal = !!raw;\r
    }\r
    \r
    // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É\r
    if (!condVal) return "";\r
    \r
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º prompt\r
    if (Array.isArray(prompt)) prompt = prompt[0][0];\r
    if (!prompt || typeof prompt !== 'string' || !prompt.trim()) return "";\r
    \r
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è\r
    if (maxTokens == null) maxTokens = 25000;\r
    if (temperature == null) temperature = 0.7;\r
    \r
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é GM\r
    return GM(prompt, maxTokens, temperature);\r
  } catch (e) {\r
    logMessage('‚ùå GM_IF –æ—à–∏–±–∫–∞: ' + e.message, 'ERROR');\r
    return 'Error: ' + e.message;\r
  }\r
}\r
\r
// GM_IF_STATIC removed - functionality handled by client-side version in ThinClient.gs\r
\r
/**\r
 * –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∫–æ–ª–æ–Ω–∫–∏ –≤ –±—É–∫–≤—É (A, B, C, ...)\r
 */\r
function columnToLetter(column) {\r
  var temp, letter = '';\r
  while (column > 0) {\r
    temp = (column - 1) % 26;\r
    letter = String.fromCharCode(temp + 65) + letter;\r
    column = (column - temp - 1) / 26;\r
  }\r
  return letter;\r
}\r
\r
/**\r
 * –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –±—É–∫–≤—ã –∫–æ–ª–æ–Ω–∫–∏ –≤ –Ω–æ–º–µ—Ä (A‚Üí1, B‚Üí2, ...)\r
 */\r
function letterToColumn(letters) {\r
  var s = String(letters || '').toUpperCase().trim();\r
  var col = 0;\r
  for (var i = 0; i < s.length; i++) {\r
    col = col * 26 + (s.charCodeAt(i) - 64);\r
  }\r
  return col;\r
}\r
\r
/**\r
 * –ü–∞—Ä—Å–∏–Ω–≥ A1 –Ω–æ—Ç–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞!B3" –∏–ª–∏ "B3")\r
 */\r
function parseTargetA1(a1) {\r
  var raw = String(a1 || '').trim();\r
  if (!raw) throw new Error('–ü—É—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —è—á–µ–π–∫—É');\r
  \r
  var m = raw.match(/^([^!]+)!([A-Za-z]+)(\\d+)$/);\r
  var sheetName, colLetters, row;\r
  \r
  if (m) {\r
    sheetName = m[1];\r
    colLetters = m[2];\r
    row = parseInt(m[3], 10);\r
  } else {\r
    var m2 = raw.match(/^([A-Za-z]+)(\\d+)$/);\r
    if (!m2) throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —è—á–µ–π–∫–∏: ' + raw);\r
    sheetName = '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞'; // –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ª–∏—Å—Ç\r
    colLetters = m2[1];\r
    row = parseInt(m2[2], 10);\r
  }\r
  \r
  if (sheetName !== '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') {\r
    throw new Error('–û–∂–∏–¥–∞–ª—Å—è –ª–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞", –ø–æ–ª—É—á–µ–Ω–æ: ' + sheetName);\r
  }\r
  \r
  var col = letterToColumn(colLetters);\r
  return { \r
    sheetName: sheetName, \r
    row: row, \r
    col: col, \r
    a1: (colLetters.toUpperCase() + row) \r
  };\r
}\r
\r
/**\r
 * –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ —Å –∞–≤—Ç–æ–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º Markdown\r
 */\r
function getCellValue(sheetName, row, col) {\r
  try {\r
    var ss = SpreadsheetApp.getActive();\r
    var sheet = ss.getSheetByName(sheetName);\r
    if (!sheet) return null;\r
    \r
    var value = sheet.getRange(row, col).getValue();\r
    \r
    // –ê–≤—Ç–æ–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Markdown –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–∫—Ä–æ–º–µ –∫–æ–ª–æ–Ω–∫–∏ A)\r
    if (value && typeof value === 'string' && col > 1) {\r
      var processed = processGeminiResponse(value);\r
      if (processed !== value) {\r
        sheet.getRange(row, col).setValue(processed);\r
        logMessage('üîÑ Markdown –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ ' + sheet.getRange(row, col).getA1Notation(), 'INFO');\r
        return processed;\r
      }\r
    }\r
    \r
    return value;\r
  } catch (e) {\r
    logMessage('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —è—á–µ–π–∫–∏ ' + sheetName + '(' + row + ',' + col + '): ' + e.message, 'ERROR');\r
    return null;\r
  }\r
}\r
\r
/**\r
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –≤ —è—á–µ–π–∫—É\r
 */\r
function setFormulaToCell(row, col, formula) {\r
  try {\r
    var ss = SpreadsheetApp.getActive();\r
    var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');\r
    if (!sheet) {\r
      logMessage('‚ùå –õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω', 'ERROR');\r
      return false;\r
    }\r
    \r
    var cell = sheet.getRange(row, col);\r
    cell.setFormula(formula);\r
    logMessage('‚úÖ –§–æ—Ä–º—É–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ ' + cell.getA1Notation() + ': ' + formula.slice(0, 80) + '...', 'INFO');\r
    return true;\r
  } catch (e) {\r
    logMessage('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ—Ä–º—É–ª—ã –≤ (' + row + ',' + col + '): ' + e.message, 'ERROR');\r
    return false;\r
  }\r
}\r
\r
/**\r
 * –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –∏–∑ Prompt_box\r
 */\r
function getPromptFormula(rowIndex) {\r
  try {\r
    var ss = SpreadsheetApp.getActive();\r
    var promptSheet = ss.getSheetByName('Prompt_box');\r
    if (!promptSheet) {\r
      logMessage('‚ùå –õ–∏—Å—Ç "Prompt_box" –Ω–µ –Ω–∞–π–¥–µ–Ω', 'ERROR');\r
      return null;\r
    }\r
    \r
    var rng = promptSheet.getRange(rowIndex, 6); // F\r
    var formula = rng.getFormula(); // –í–ê–ñ–ù–û: —Ñ–æ—Ä–º—É–ª–∞, –∞ –Ω–µ –∑–Ω–∞—á–µ–Ω–∏–µ\r
    if (!formula || !formula.trim()) {\r
      logMessage(`‚ÑπÔ∏è –§–æ—Ä–º—É–ª–∞ –≤ Prompt_box!F${rowIndex} –ø—É—Å—Ç–∞`, 'INFO');\r
      return null;\r
    }\r
    \r
    logMessage(`üì• –§–æ—Ä–º—É–ª–∞ –∏–∑ Prompt_box!F${rowIndex}: ${formula.slice(0,80)}...`, 'DEBUG');\r
    return formula;\r
  } catch (e) {\r
    logMessage('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª—ã –∏–∑ F' + rowIndex + ': ' + e.message, 'ERROR');\r
    return null;\r
  }\r
}