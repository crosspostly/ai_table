/**
 * Configuration Manager for CollectConfig System
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ AI –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
 * 
 * Version: 1.0.0
 * Created: 2025-01-14
 */

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (A1 notation)
 * @param {Object} config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è {systemPrompt, userData[]}
 * @return {boolean} —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
function saveCollectConfig(sheetName, cellAddress, config) {
  try {
    addSystemLog(`saveCollectConfig START: ${sheetName}!${cellAddress}`, 'DEBUG', 'COLLECT_CONFIG');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!sheetName || !cellAddress || !config) {
      throw new Error('–¢—Ä–µ–±—É—é—Ç—Å—è sheetName, cellAddress –∏ config');
    }
    
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—ã–π –ª–∏—Å—Ç ConfigData
    var configSheet = ss.getSheetByName('ConfigData');
    
    if (!configSheet) {
      addSystemLog('–°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ ConfigData', 'INFO', 'COLLECT_CONFIG');
      configSheet = ss.insertSheet('ConfigData');
      
      // –°–∫—Ä—ã–≤–∞–µ–º –ª–∏—Å—Ç
      configSheet.hideSheet();
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
      var headers = ['Sheet', 'Cell', 'SystemPromptSheet', 'SystemPromptCell', 'UserDataJSON', 'CreatedAt', 'LastRun', 'ConfigName'];
      configSheet.getRange(1, 1, 1, headers.length).setValues([headers]);
      configSheet.getRange(1, 1, 1, headers.length).setFontWeight('bold').setBackground('#4285f4').setFontColor('white');
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤
      configSheet.setColumnWidth(1, 120); // Sheet
      configSheet.setColumnWidth(2, 80);  // Cell
      configSheet.setColumnWidth(3, 150); // SystemPromptSheet
      configSheet.setColumnWidth(4, 100); // SystemPromptCell
      configSheet.setColumnWidth(5, 300); // UserDataJSON
      configSheet.setColumnWidth(6, 150); // CreatedAt
      configSheet.setColumnWidth(7, 150); // LastRun
      configSheet.setColumnWidth(8, 200); // ConfigName
    }
    
    // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    var existingRowIndex = findExistingConfig(configSheet, sheetName, cellAddress);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    var currentTime = new Date().toISOString();
    var systemPromptSheet = config.systemPrompt ? config.systemPrompt.sheet : '';
    var systemPromptCell = config.systemPrompt ? config.systemPrompt.cell : '';
    var userDataJSON = JSON.stringify(config.userData || []);
    var configName = config.name || ''; // –î–ª—è –±—É–¥—É—â–∏—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤
    
    if (existingRowIndex > 0) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      addSystemLog(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Å—Ç—Ä–æ–∫–µ ${existingRowIndex}`, 'INFO', 'COLLECT_CONFIG');
      
      var rowData = [
        [sheetName, cellAddress, systemPromptSheet, systemPromptCell, userDataJSON, 
         configSheet.getRange(existingRowIndex, 6).getValue(), // –°–æ—Ö—Ä–∞–Ω—è–µ–º CreatedAt
         null, // LastRun –æ–±–Ω—É–ª—è–µ–º –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
         configName]
      ];
      
      configSheet.getRange(existingRowIndex, 1, 1, rowData[0].length).setValues(rowData);
      
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      addSystemLog('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏', 'INFO', 'COLLECT_CONFIG');
      
      var lastRow = configSheet.getLastRow();
      var rowData = [
        [sheetName, cellAddress, systemPromptSheet, systemPromptCell, userDataJSON, 
         currentTime, null, configName]
      ];
      
      configSheet.getRange(lastRow + 1, 1, 1, rowData[0].length).setValues(rowData);
    }
    
    addSystemLog(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${userDataJSON.length} —Å–∏–º–≤–æ–ª–æ–≤ JSON`, 'INFO', 'COLLECT_CONFIG');
    return true;
    
  } catch (error) {
    addSystemLog(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`, 'ERROR', 'COLLECT_CONFIG');
    throw error;
  }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏  
 * @return {Object|null} –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
 */
function loadCollectConfig(sheetName, cellAddress) {
  try {
    addSystemLog(`loadCollectConfig START: ${sheetName}!${cellAddress}`, 'DEBUG', 'COLLECT_CONFIG');
    
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var configSheet = ss.getSheetByName('ConfigData');
    
    if (!configSheet) {
      addSystemLog('–õ–∏—Å—Ç ConfigData –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', 'WARN', 'COLLECT_CONFIG');
      return null;
    }
    
    var rowIndex = findExistingConfig(configSheet, sheetName, cellAddress);
    
    if (rowIndex <= 0) {
      addSystemLog('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 'INFO', 'COLLECT_CONFIG');
      return null;
    }
    
    // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏
    var rowData = configSheet.getRange(rowIndex, 1, 1, 8).getValues()[0];
    
    var systemPrompt = null;
    if (rowData[2] && rowData[3]) { // SystemPromptSheet –∏ SystemPromptCell
      systemPrompt = {
        sheet: rowData[2],
        cell: rowData[3]
      };
    }
    
    var userData = [];
    try {
      if (rowData[4]) { // UserDataJSON
        userData = JSON.parse(rowData[4]);
      }
    } catch (parseError) {
      addSystemLog(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ UserDataJSON: ${parseError.message}`, 'WARN', 'COLLECT_CONFIG');
    }
    
    var config = {
      systemPrompt: systemPrompt,
      userData: userData,
      name: rowData[7] || '', // ConfigName
      createdAt: rowData[5],   // CreatedAt
      lastRun: rowData[6]      // LastRun
    };
    
    addSystemLog(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: SystemPrompt=${systemPrompt ? '–¥–∞' : '–Ω–µ—Ç'}, UserData=${userData.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`, 'INFO', 'COLLECT_CONFIG');
    return config;
    
  } catch (error) {
    addSystemLog(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`, 'ERROR', 'COLLECT_CONFIG');
    return null;
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ AI –∑–∞–ø—Ä–æ—Å–∞ –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
 * @return {Object} {success: boolean, result?: string, error?: string}
 */
function executeCollectConfig(sheetName, cellAddress) {
  try {
    addSystemLog(`executeCollectConfig START: ${sheetName}!${cellAddress}`, 'INFO', 'COLLECT_EXEC');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º Gemini API Key
    var credentials = getClientCredentials();
    if (!credentials.geminiKey) {
      return {
        success: false,
        error: '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Gemini API Key. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é: ü§ñ Table AI ‚Üí ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üåü –ù–ê–°–¢–†–û–ò–¢–¨ –í–°–ï –ö–õ–Æ–ß–ò'
      };
    }
    
    // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    addSystemLog('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...', 'DEBUG', 'COLLECT_EXEC');
    var config = loadCollectConfig(sheetName, cellAddress);
    
    if (!config) {
      return {
        success: false,
        error: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑: üéØ AI –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Üí –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–ø—Ä–æ—Å'
      };
    }
    
    addSystemLog(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: ${JSON.stringify(config).substring(0, 100)}...`, 'DEBUG', 'COLLECT_EXEC');
    
    // 3. –°–æ–±–∏—Ä–∞–µ–º System Prompt
    var systemPrompt = '';
    if (config.systemPrompt && config.systemPrompt.sheet && config.systemPrompt.cell) {
      addSystemLog(`–°–±–æ—Ä System Prompt –∏–∑ ${config.systemPrompt.sheet}!${config.systemPrompt.cell}`, 'DEBUG', 'COLLECT_EXEC');
      
      try {
        systemPrompt = collectDataFromRange(config.systemPrompt.sheet, config.systemPrompt.cell);
        addSystemLog(`System Prompt —Å–æ–±—Ä–∞–Ω: ${systemPrompt.length} —Å–∏–º–≤–æ–ª–æ–≤`, 'DEBUG', 'COLLECT_EXEC');
      } catch (error) {
        addSystemLog(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ System Prompt: ${error.message}`, 'WARN', 'COLLECT_EXEC');
      }
    }
    
    // 4. –°–æ–±–∏—Ä–∞–µ–º User Data
    var userData = [];
    addSystemLog(`–°–±–æ—Ä User Data –∏–∑ ${config.userData.length} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤`, 'DEBUG', 'COLLECT_EXEC');
    
    for (var i = 0; i < config.userData.length; i++) {
      var source = config.userData[i];
      if (source.sheet && source.cell) {
        try {
          addSystemLog(`  [${i}] ${source.sheet}!${source.cell}`, 'DEBUG', 'COLLECT_EXEC');
          var data = collectDataFromRange(source.sheet, source.cell);
          
          userData.push({
            source: `${source.sheet}!${source.cell}`,
            content: data
          });
          
          addSystemLog(`  ‚úÖ –°–æ–±—Ä–∞–Ω–æ ${data.length} —Å–∏–º–≤–æ–ª–æ–≤`, 'DEBUG', 'COLLECT_EXEC');
        } catch (error) {
          addSystemLog(`  ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –∏–∑ ${source.sheet}!${source.cell}: ${error.message}`, 'ERROR', 'COLLECT_EXEC');
          
          userData.push({
            source: `${source.sheet}!${source.cell}`,
            content: `[–û–®–ò–ë–ö–ê: ${error.message}]`
          });
        }
      }
    }
    
    // 5. –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    var requestData = {
      systemInstruction: systemPrompt,
      userData: userData
    };
    
    // –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è Gemini
    var fullPrompt = '';
    
    if (systemPrompt) {
      fullPrompt += systemPrompt + '\n\n';
    }
    
    if (userData.length > 0) {
      fullPrompt += '–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n\n';
      for (var j = 0; j < userData.length; j++) {
        fullPrompt += `–ò—Å—Ç–æ—á–Ω–∏–∫ ${j + 1} (${userData[j].source}):\n${userData[j].content}\n\n`;
      }
    }
    
    if (!fullPrompt.trim()) {
      return {
        success: false,
        error: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ System Prompt –∏–ª–∏ User Data.'
      };
    }
    
    addSystemLog(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç: ${fullPrompt.length} —Å–∏–º–≤–æ–ª–æ–≤`, 'DEBUG', 'COLLECT_EXEC');
    
    // 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Gemini
    addSystemLog('–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Gemini...', 'INFO', 'COLLECT_EXEC');
    
    var geminiResult = callGeminiAPI(fullPrompt, credentials.geminiKey);
    
    if (!geminiResult || !geminiResult.result) {
      return {
        success: false,
        error: 'Gemini API –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ' + (geminiResult ? geminiResult.error : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      };
    }
    
    addSystemLog(`‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Gemini: ${geminiResult.result.length} —Å–∏–º–≤–æ–ª–æ–≤`, 'INFO', 'COLLECT_EXEC');
    
    // 7. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —è—á–µ–π–∫—É
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var targetSheet = ss.getSheetByName(sheetName);
    
    if (!targetSheet) {
      return {
        success: false,
        error: `–õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`
      };
    }
    
    try {
      var targetRange = targetSheet.getRange(cellAddress);
      targetRange.setValue(geminiResult.result);
      
      addSystemLog(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Å–∞–Ω –≤ ${sheetName}!${cellAddress}`, 'INFO', 'COLLECT_EXEC');
      
      // 8. –û–±–Ω–æ–≤–ª—è–µ–º LastRun
      updateLastRun(sheetName, cellAddress);
      
      return {
        success: true,
        result: geminiResult.result
      };
      
    } catch (error) {
      return {
        success: false,
        error: `–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —è—á–µ–π–∫—É ${cellAddress}: ${error.message}`
      };
    }
    
  } catch (error) {
    addSystemLog(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ executeCollectConfig: ${error.message}`, 'ERROR', 'COLLECT_EXEC');
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 * @return {boolean} —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
function deleteCollectConfig(sheetName, cellAddress) {
  try {
    addSystemLog(`deleteCollectConfig START: ${sheetName}!${cellAddress}`, 'DEBUG', 'COLLECT_CONFIG');
    
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var configSheet = ss.getSheetByName('ConfigData');
    
    if (!configSheet) {
      return true; // –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å
    }
    
    var rowIndex = findExistingConfig(configSheet, sheetName, cellAddress);
    
    if (rowIndex > 0) {
      configSheet.deleteRow(rowIndex);
      addSystemLog(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ ${rowIndex}`, 'INFO', 'COLLECT_CONFIG');
    }
    
    return true;
    
  } catch (error) {
    addSystemLog(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`, 'ERROR', 'COLLECT_CONFIG');
    return false;
  }
}

/**
 * –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * @param {Sheet} configSheet - –ª–∏—Å—Ç ConfigData
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 * @return {number} –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ -1 –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
 */
function findExistingConfig(configSheet, sheetName, cellAddress) {
  var lastRow = configSheet.getLastRow();
  
  if (lastRow <= 1) {
    return -1; // –¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–ª–∏ –ø—É—Å—Ç–æ–π –ª–∏—Å—Ç
  }
  
  // –ß–∏—Ç–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ —Ä–∞–∑ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  var data = configSheet.getRange(2, 1, lastRow - 1, 2).getValues();
  
  for (var i = 0; i < data.length; i++) {
    if (data[i][0] === sheetName && data[i][1] === cellAddress) {
      return i + 2; // +2 –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞—á–∞–ª–∏ —Å —Å—Ç—Ä–æ–∫–∏ 2 –∏ –∏–Ω–¥–µ–∫—Å 0-based
    }
  }
  
  return -1;
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 */
function updateLastRun(sheetName, cellAddress) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var configSheet = ss.getSheetByName('ConfigData');
    
    if (!configSheet) return;
    
    var rowIndex = findExistingConfig(configSheet, sheetName, cellAddress);
    
    if (rowIndex > 0) {
      configSheet.getRange(rowIndex, 7).setValue(new Date().toISOString()); // LastRun
      addSystemLog(`LastRun –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è ${sheetName}!${cellAddress}`, 'DEBUG', 'COLLECT_CONFIG');
    }
    
  } catch (error) {
    addSystemLog(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è LastRun: ${error.message}`, 'WARN', 'COLLECT_CONFIG');
  }
}

/**
 * –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —è—á–µ–µ–∫
 * @param {string} sheetName - –∏–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –∞–¥—Ä–µ—Å —è—á–µ–π–∫–∏/–¥–∏–∞–ø–∞–∑–æ–Ω–∞ (A1, C1:C100, C:C)
 * @return {string} —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function collectDataFromRange(sheetName, cellAddress) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = ss.getSheetByName(sheetName);
    
    if (!sheet) {
      throw new Error(`–õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –ø–æ–ª–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
    var normalizedAddress = cellAddress;
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü (C:C), –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ C1:C (–¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏)
    if (/^[A-Z]+:[A-Z]+$/.test(cellAddress)) {
      var columnLetter = cellAddress.split(':')[0];
      var lastRow = sheet.getLastRow();
      normalizedAddress = `${columnLetter}1:${columnLetter}${lastRow}`;
    }
    
    var range = sheet.getRange(normalizedAddress);
    var values = range.getValues();
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫—É
    var result = [];
    
    for (var i = 0; i < values.length; i++) {
      for (var j = 0; j < values[i].length; j++) {
        var value = values[i][j];
        if (value !== null && value !== undefined && value.toString().trim() !== '') {
          result.push(value.toString());
        }
      }
    }
    
    return result.join('\n');
    
  } catch (error) {
    throw new Error(`–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ ${sheetName}!${cellAddress}: ${error.message}`);
  }
}

/**
 * –õ–æ–≥–∏ AI –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
 * @return {Array<string>} –º–∞—Å—Å–∏–≤ –ª–æ–≥–æ–≤
 */
function showCollectConfigLogs() {
  try {
    var ui = SpreadsheetApp.getUi();
    
    // –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –∏–∑ CacheService
    var logs = [];
    
    try {
      var cache = CacheService.getScriptCache();
      var props = PropertiesService.getScriptProperties();
      var allProps = props.getProperties();
      
      // –ò—â–µ–º –ª–æ–≥–∏ –≤ Properties
      Object.keys(allProps).forEach(function(key) {
        if (key.startsWith('log_') && (key.indexOf('COLLECT_CONFIG') > -1 || key.indexOf('COLLECT_EXEC') > -1)) {
          try {
            var logEntry = JSON.parse(allProps[key]);
            logs.push(`[${logEntry.timestamp}] ${logEntry.level} [${logEntry.component}] ${logEntry.message}`);
          } catch (e) {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
          }
        }
      });
      
    } catch (cacheError) {
      logs.push('‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º: ' + cacheError.message);
    }
    
    if (logs.length === 0) {
      logs.push('üìã –õ–æ–≥–∏ –ø—É—Å—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–ø—Ä–æ—Å (üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å)\n2. –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å (üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å)\n3. –°—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç—å –ª–æ–≥–∏');
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    logs.sort().reverse();
    
    var logText = logs.slice(0, 50).join('\n\n'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞–ø–∏—Å–µ–π
    
    ui.alert(
      'üîç –õ–æ–≥–∏ AI –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞',
      logText.length > 8000 ? logText.substring(0, 8000) + '\n\n... (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 8000 —Å–∏–º–≤–æ–ª–æ–≤)' : logText,
      ui.ButtonSet.OK
    );
    
  } catch (error) {
    SpreadsheetApp.getUi().alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–∏: ' + error.message, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}