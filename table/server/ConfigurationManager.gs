/**
 * Configuration Manager
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ —è—á–µ–µ–∫ –¥–ª—è GM_COLLECT
 * 
 * –•—Ä–∞–Ω–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–∫—Ä—ã—Ç–æ–º –ª–∏—Å—Ç–µ "ConfigData"
 * –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
 * | Sheet | Cell | SystemPromptSheet | SystemPromptCell | UserDataJSON | CreatedAt | LastRun |
 * 
 * –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
 * - –ù–µ—Ç –ª–∏–º–∏—Ç–æ–≤ PropertiesService (500KB)
 * - –õ–µ–≥–∫–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * - –ú–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å/–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
 */

var CONFIG_SHEET_NAME = 'ConfigData';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
 * @return {Sheet} –õ–∏—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
 */
function getOrCreateConfigSheet() {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = ss.getSheetByName(CONFIG_SHEET_NAME);
    
    if (!sheet) {
      // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç
      sheet = ss.insertSheet(CONFIG_SHEET_NAME);
      
      // –ó–∞–≥–æ–ª–æ–≤–∫–∏
      sheet.getRange('A1:G1').setValues([[
        'Sheet', 'Cell', 'SystemPromptSheet', 'SystemPromptCell', 
        'UserDataJSON', 'CreatedAt', 'LastRun'
      ]]);
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
      sheet.getRange('A1:G1')
        .setBackground('#4285f4')
        .setFontColor('#ffffff')
        .setFontWeight('bold');
      
      // –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
      sheet.setFrozenRows(1);
      
      // –°–∫—Ä—ã–≤–∞–µ–º –ª–∏—Å—Ç
      sheet.hideSheet();
      
      Logger.log('‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: ' + CONFIG_SHEET_NAME);
    }
    
    return sheet;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: ' + error.message);
    throw error;
  }
}

/**
 * –ù–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —è—á–µ–π–∫–∏
 * @param {Sheet} configSheet - –õ–∏—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 * @return {number} –ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ -1 –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
 */
function findConfigRow(configSheet, sheetName, cellAddress) {
  try {
    var data = configSheet.getDataRange().getValues();
    
    for (var i = 1; i < data.length; i++) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
      if (data[i][0] === sheetName && data[i][1] === cellAddress) {
        return i + 1; // +1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã —Å 1
      }
    }
    
    return -1;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ' + error.message);
    return -1;
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —è—á–µ–π–∫–∏
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä "B3")
 * @param {Object} config - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
 */
function saveCollectConfig(sheetName, cellAddress, config) {
  try {
    var configSheet = getOrCreateConfigSheet();
    var row = findConfigRow(configSheet, sheetName, cellAddress);
    
    var systemPromptSheet = config.systemPrompt ? config.systemPrompt.sheet : '';
    var systemPromptCell = config.systemPrompt ? config.systemPrompt.cell : '';
    var userDataJSON = JSON.stringify(config.userData || []);
    var createdAt = new Date().toISOString();
    
    var rowData = [
      sheetName,
      cellAddress,
      systemPromptSheet,
      systemPromptCell,
      userDataJSON,
      createdAt,
      '' // LastRun –ø—É—Å—Ç–æ–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
    ];
    
    if (row === -1) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
      configSheet.appendRow(rowData);
      Logger.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è ' + sheetName + '!' + cellAddress);
    } else {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é (—Å–æ—Ö—Ä–∞–Ω—è–µ–º CreatedAt)
      var existingCreatedAt = configSheet.getRange(row, 6).getValue();
      rowData[5] = existingCreatedAt || createdAt;
      configSheet.getRange(row, 1, 1, 7).setValues([rowData]);
      Logger.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è ' + sheetName + '!' + cellAddress);
    }
    
    return true;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ' + error.message);
    return false;
  }
}

/**
 * –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —è—á–µ–π–∫–∏
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 * @return {Object|null} –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–ª–∏ null
 */
function loadCollectConfig(sheetName, cellAddress) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var configSheet = ss.getSheetByName(CONFIG_SHEET_NAME);
    
    if (!configSheet) {
      return null; // –õ–∏—Å—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω = –Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    }
    
    var row = findConfigRow(configSheet, sheetName, cellAddress);
    
    if (row === -1) {
      return null; // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    }
    
    var data = configSheet.getRange(row, 1, 1, 7).getValues()[0];
    
    var config = {
      systemPrompt: data[2] && data[3] ? {
        sheet: data[2],
        cell: data[3]
      } : null,
      userData: data[4] ? JSON.parse(data[4]) : [],
      createdAt: data[5],
      lastRun: data[6] || null
    };
    
    Logger.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–ª—è ' + sheetName + '!' + cellAddress);
    return config;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ' + error.message);
    return null;
  }
}

/**
 * –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —è—á–µ–π–∫–∏
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 */
function deleteCollectConfig(sheetName, cellAddress) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var configSheet = ss.getSheetByName(CONFIG_SHEET_NAME);
    
    if (!configSheet) {
      return true; // –ù–µ—Ç –ª–∏—Å—Ç–∞ = –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å
    }
    
    var row = findConfigRow(configSheet, sheetName, cellAddress);
    
    if (row === -1) {
      return true; // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ = —É–∂–µ —É–¥–∞–ª–µ–Ω–∞
    }
    
    configSheet.deleteRow(row);
    Logger.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –¥–ª—è ' + sheetName + '!' + cellAddress);
    return true;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ' + error.message);
    return false;
  }
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 */
function updateLastRun(sheetName, cellAddress) {
  try {
    var config = loadCollectConfig(sheetName, cellAddress);
    if (!config) {
      return false;
    }
    
    config.lastRun = new Date().toISOString();
    saveCollectConfig(sheetName, cellAddress, config);
    return true;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è lastRun: ' + error.message);
    return false;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ª–∏—Å—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ
 * @return {Array} –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –ª–∏—Å—Ç–æ–≤
 */
function getAllSheetNames() {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var sheets = ss.getSheets();
    var names = [];
    
    for (var i = 0; i < sheets.length; i++) {
      names.push(sheets[i].getName());
    }
    
    return names;
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ª–∏—Å—Ç–æ–≤: ' + error.message);
    return [];
  }
}

/**
 * –°–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —è—á–µ–π–∫–∏/–¥–∏–∞–ø–∞–∑–æ–Ω–∞
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
 * @return {string} –°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function collectDataFromRange(sheetName, cellAddress) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = ss.getSheetByName(sheetName);
    
    if (!sheet) {
      Logger.log('‚ùå –õ–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + sheetName);
      return '';
    }
    
    var range = sheet.getRange(cellAddress);
    var values = range.getValues();
    var result = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    for (var row = 0; row < values.length; row++) {
      for (var col = 0; col < values[row].length; col++) {
        var value = values[row][col];
        if (value !== null && value !== undefined && value !== '') {
          result.push(String(value));
        }
      }
    }
    
    return result.join(' ');
    
  } catch (error) {
    Logger.log('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ ' + sheetName + '!' + cellAddress + ': ' + error.message);
    return '';
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞
 * @param {string} cellAddress - –ê–¥—Ä–µ—Å —è—á–µ–π–∫–∏
 * @return {Object} {success, result, error}
 */
function executeCollectConfig(sheetName, cellAddress) {
  try {
    addSystemLog('‚Üí executeCollectConfig START: ' + sheetName + '!' + cellAddress, 'INFO', 'COLLECT_EXEC');
    
    // üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials
    var props = PropertiesService.getScriptProperties();
    var geminiKey = props.getProperty('GEMINI_API_KEY');
    
    if (!geminiKey) {
      addSystemLog('‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!', 'ERROR', 'COLLECT_EXEC');
      return {
        success: false,
        error: '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Gemini API Key! –ú–µ–Ω—é ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí Gemini API'
      };
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    addSystemLog('   –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...', 'DEBUG', 'COLLECT_EXEC');
    var config = loadCollectConfig(sheetName, cellAddress);
    if (!config) {
      addSystemLog('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', 'ERROR', 'COLLECT_EXEC');
      return {
        success: false,
        error: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è ' + sheetName + '!' + cellAddress
      };
    }
    
    addSystemLog('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: ' + JSON.stringify(config), 'DEBUG', 'COLLECT_EXEC');
    
    // –°–æ–±–∏—Ä–∞–µ–º System Prompt
    var systemPrompt = '';
    if (config.systemPrompt) {
      addSystemLog('   –°–±–æ—Ä System Prompt –∏–∑ ' + config.systemPrompt.sheet + '!' + config.systemPrompt.cell, 'DEBUG', 'COLLECT_EXEC');
      systemPrompt = collectDataFromRange(
        config.systemPrompt.sheet,
        config.systemPrompt.cell
      );
      addSystemLog('   System Prompt: ' + systemPrompt.substring(0, 100) + '...', 'DEBUG', 'COLLECT_EXEC');
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º User Data
    var userData = [];
    if (config.userData && config.userData.length > 0) {
      addSystemLog('   –°–±–æ—Ä User Data –∏–∑ ' + config.userData.length + ' –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤', 'DEBUG', 'COLLECT_EXEC');
      for (var i = 0; i < config.userData.length; i++) {
        var dataSource = config.userData[i];
        addSystemLog('     [' + i + '] ' + dataSource.sheet + '!' + dataSource.cell, 'DEBUG', 'COLLECT_EXEC');
        var data = collectDataFromRange(dataSource.sheet, dataSource.cell);
        if (data) {
          userData.push({
            source: dataSource.sheet + '!' + dataSource.cell,
            content: data
          });
          addSystemLog('     ‚úÖ –°–æ–±—Ä–∞–Ω–æ ' + data.length + ' —Å–∏–º–≤–æ–ª–æ–≤', 'DEBUG', 'COLLECT_EXEC');
        }
      }
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º JSON –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ AI
    var requestData = {
      systemInstruction: systemPrompt,
      userData: userData
    };
    
    addSystemLog('   –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Gemini...', 'INFO', 'COLLECT_EXEC');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Gemini
    var result = sendToGeminiWithJSON(requestData);
    
    addSystemLog('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Gemini: ' + result.substring(0, 100) + '...', 'INFO', 'COLLECT_EXEC');
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —è—á–µ–π–∫—É
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var targetSheet = ss.getSheetByName(sheetName);
    if (targetSheet) {
      targetSh                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    