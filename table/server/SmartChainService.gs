/**
 * Smart Chain Service
 * –£–º–Ω—ã–µ —Ü–µ–ø–æ—á–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á
 */

/**
 * –£–º–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ü–µ–ø–æ—á–∫–∏ (–ø—Ä–æ–≤–µ—Ä—è–µ—Ç Prompt_box –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç A3)
 */
function prepareChainSmart() {
  var ss = SpreadsheetApp.getActive();
  var prompt = ss.getSheetByName('Prompt_box');
  var hasTargets = false;
  
  if (prompt) {
    var lastRow = Math.max(2, prompt.getLastRow());
    var vals = prompt.getRange(2, 2, lastRow - 1, 1).getDisplayValues(); // B2:B
    
    for (var i = 0; i < vals.length; i++) {
      if (String(vals[i][0] || '').trim()) {
        hasTargets = true;
        break;
      }
    }
  }
  
  if (hasTargets) {
    prepareChainFromPromptBox();
  } else {
    prepareChainForA3();
  }
}

/**
 * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –∏–∑ Prompt_box (–±–µ—Ä–µ—Ç —Ü–µ–ª–∏ –∏–∑ –∫–æ–ª–æ–Ω–∫–∏ B)
 */
function prepareChainFromPromptBox() {
  var ss = SpreadsheetApp.getActive();
  var prompt = ss.getSheetByName('Prompt_box');
  var pack = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
  
  if (!prompt) {
    SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "Prompt_box" –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  if (!pack) {
    SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  var lastRow = Math.max(2, prompt.getLastRow());
  var targets = prompt.getRange(2, 2, lastRow - 1, 1).getDisplayValues(); // B2:B ‚Äî —è—á–µ–π–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
  var mappings = [];
  
  for (var r = 2; r <= lastRow; r++) {
    var targetStr = String(targets[r - 2][0] || '').trim();
    if (!targetStr) continue;
    
    try {
      var parsed = parseTargetA1(targetStr);
      mappings.push({ 
        promptRow: r, 
        targetRow: parsed.row, 
        targetCol: parsed.col, 
        targetA1: parsed.a1 
      });
    } catch (e) {
      logMessage('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Å—Ç—Ä–æ–∫–∏ Prompt_box!B' + r + ': ' + e.message, 'WARN');
    }
  }
  
  if (!mappings.length) {
    SpreadsheetApp.getUi().alert('–ù–µ—Ç —Ü–µ–ª–µ–≤—ã—Ö —è—á–µ–µ–∫ –≤ Prompt_box!B, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ.');
    return;
  }
  
  var phrase = getCompletionPhrase() || COMPLETION_PHRASE;
  var phraseEscaped = phrase.replace(/"/g, '""');
  
  for (var i = 0; i < mappings.length; i++) {
    var m = mappings[i];
    var cond;
    
    if (i === 0) {
      // –í—Å–µ–≥–¥–∞ —è–∫–æ—Ä—å –æ—Ç A3
      cond = '$A3<>""';
    } else {
      var prev = mappings[i - 1];
      cond = 'LEFT(' + prev.targetA1 + ', LEN("' + phraseEscaped + '"))="' + phraseEscaped + '"';
    }
    
    var formula = '=GM_IF(' + cond + ', Prompt_box!$F$' + m.promptRow + ', 25000, 0.7)';
    pack.getRange(m.targetRow, m.targetCol).setFormula(formula);
    
    logMessage('üìù –§–æ—Ä–º—É–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Üí –†–∞—Å–ø–∞–∫–æ–≤–∫–∞!' + m.targetA1 + ' –∏–∑ Prompt_box!F' + m.promptRow, 'INFO');
  }
  
  SpreadsheetApp.getUi().alert('‚úÖ –ì–æ—Ç–æ–≤–æ: —Ñ–æ—Ä–º—É–ª—ã —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–æ —Ü–µ–ª—è–º –∏–∑ Prompt_box!B.\\n–ü–µ—Ä–≤–∞—è —è—á–µ–π–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ A-—Å—Ç–æ–ª–±—Ü–∞, –¥–∞–ª–µ–µ ‚Äî –ø–æ —Ñ—Ä–∞–∑–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.');
}

/**
 * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –¥–ª—è A3 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ B3..G3)
 */
function prepareChainForA3() {
  var ss = SpreadsheetApp.getActive();
  var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
  
  if (!sheet) {
    SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  var row = 3;
  var startCol = 2; // B
  var steps = 6;    // B..G
  var endCol = startCol + steps - 1;
  var phrase = getCompletionPhrase() || COMPLETION_PHRASE;
  var phraseEscaped = phrase.replace(/"/g, '""');
  
  for (var col = startCol; col <= endCol; col++) {
    var stepIndex = col - 1;       // B=1 -> —à–∞–≥ 1
    var promptRow = stepIndex + 1; // —à–∞–≥ 1 -> F2 ... —à–∞–≥ 6 -> F7
    var target = sheet.getRange(row, col);
    var promptRef = 'Prompt_box!$F$' + promptRow;
    var formula;
    
    if (col === 2) {
      // –ü–µ—Ä–≤–∞—è —Ñ–æ—Ä–º—É–ª–∞ - –∑–∞–ø—É—Å–∫ –æ—Ç A3
      formula = '=GM_IF($A3<>"", ' + promptRef + ', 25000, 0.7)';
    } else {
      // –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º—É–ª—ã - –ø–æ —Ñ—Ä–∞–∑–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
      var prevColLetter = columnToLetter(col - 1);
      formula = '=GM_IF(LEFT(' + prevColLetter + '3, LEN("' + phraseEscaped + '"))="' + phraseEscaped + '", ' + promptRef + ', 25000, 0.7)';
    }
    
    target.setFormula(formula);
    logMessage('üìù –§–æ—Ä–º—É–ª–∞ ' + target.getA1Notation() + ' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', 'DEBUG');
  }
  
  SpreadsheetApp.getUi().alert('‚úÖ –ì–æ—Ç–æ–≤–æ: —Ñ–æ—Ä–º—É–ª—ã B3..G3 –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω—ã.\\n–ó–∞–ø–æ–ª–Ω–∏—Ç–µ A3 ‚Äî —à–∞–≥–∏ –ø–æ–π–¥—É—Ç –ø–æ –æ—á–µ—Ä–µ–¥–∏.');
}

/**
 * –û—á–∏—Å—Ç–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –¥–ª—è A3
 */
function clearChainForA3() {
  var ss = SpreadsheetApp.getActive();
  var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
  
  if (!sheet) {
    SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  sheet.getRange(3, 2, 1, 6).clearContent(); // B3..G3
  SpreadsheetApp.getUi().alert('üßπ –û—á–∏—â–µ–Ω–æ: B3..G3');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —è—á–µ–π–∫–∏ —Å GM —Ñ—É–Ω–∫—Ü–∏–µ–π
 */
function refreshCurrentGMCell() {
  try {
    var ss = SpreadsheetApp.getActive();
    var activeCell = ss.getActiveCell();
    
    if (!activeCell) {
      SpreadsheetApp.getUi().alert('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —è—á–µ–π–∫–∏');
      return;
    }
    
    var formula = activeCell.getFormula();
    if (!formula) {
      SpreadsheetApp.getUi().alert('–í –∞–∫—Ç–∏–≤–Ω–æ–π —è—á–µ–π–∫–µ –Ω–µ—Ç —Ñ–æ—Ä–º—É–ª—ã');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ GM —Ñ—É–Ω–∫—Ü–∏—è
    if (!formula.includes('GM(') && !formula.includes('GM_IF(') && !formula.includes('GM_STATIC(')) {
      SpreadsheetApp.getUi().alert('–ê–∫—Ç–∏–≤–Ω–∞—è —è—á–µ–π–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç GM —Ñ—É–Ω–∫—Ü–∏—é');
      return;
    }
    
    // –û—á–∏—â–∞–µ–º –∏ –ø–µ—Ä–µ–≤—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞
    activeCell.clearContent();
    SpreadsheetApp.flush();
    activeCell.setFormula(formula);
    
    logMessage('üîÑ GM —è—á–µ–π–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ' + activeCell.getA1Notation(), 'INFO');
    SpreadsheetApp.getUi().alert('‚úÖ –Ø—á–µ–π–∫–∞ ' + activeCell.getA1Notation() + ' –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    
  } catch (e) {
    var error = '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —è—á–µ–π–∫–∏: ' + e.message;
    logMessage('‚ùå ' + error, 'ERROR');
    SpreadsheetApp.getUi().alert(error);
  }
}

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø v3.0: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * –ü–µ—Ä–µ–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: B3‚ÜíC3 (–ø–æ–ª—É—á–∞–µ—Ç A3+B3), C3‚ÜíD3 (–ø–æ–ª—É—á–∞–µ—Ç B3+C3)
 */
function smartChainContinueOptimized(row) {
  try {
    addSystemLog('üîó –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π SmartChain –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ' + row, 'INFO', 'SMART_CHAIN');
    
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    var currentSheet = spreadsheet.getActiveSheet();
    
    if (!currentSheet) {
      throw new Error('–ê–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
    var rowData = currentSheet.getRange(row, 1, 1, 20).getValues()[0];
    
    // –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
    var filledCells = [];
    for (var col = 0; col < rowData.length; col++) {
      var cellValue = String(rowData[col] || '').trim();
      if (cellValue && cellValue !== '') {
        filledCells.push({
          column: String.fromCharCode(65 + col), // A, B, C, ...
          value: cellValue,
          index: col
        });
      }
    }
    
    if (filledCells.length === 0) {
      addSystemLog('‚ö†Ô∏è SmartChain: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Å—Ç—Ä–æ–∫–µ ' + row, 'WARN', 'SMART_CHAIN');
      return;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø—É—Å—Ç—É—é –∫–æ–ª–æ–Ω–∫—É
    var nextCol = -1;
    for (var col = 0; col < rowData.length; col++) {
      if (!rowData[col] || String(rowData[col]).trim() === '') {
        nextCol = col + 1;
        break;
      }
    }
    
    if (nextCol === -1) {
      addSystemLog('‚ö†Ô∏è SmartChain: –Ω–µ—Ç –ø—É—Å—Ç—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ ' + row, 'WARN', 'SMART_CHAIN');
      return;
    }
    
    // –ö–õ–Æ–ß–ï–í–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    var contextPrompt = buildMinimalChainContext(filledCells, nextCol, row);
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Ü–µ–ø–æ—á–∫–∏ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏  
    var sessionId = 'chain_' + currentSheet.getName() + '_row' + row;
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç (–æ–Ω —É–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é)
    var fullPrompt = buildContextualPrompt(contextPrompt, sessionId);
    
    // –í—ã–∑—ã–≤–∞–µ–º Gemini
    var result = callGeminiForOptimizedChain(fullPrompt, row);
    
    if (result && !result.startsWith('Error:')) {
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      currentSheet.getRange(row, nextCol).setValue(result);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¢–û–õ–¨–ö–û —Ç–µ–∫—É—â–∏–π —à–∞–≥ (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è)
      var stepDescription = '–®–∞–≥ ' + String.fromCharCode(64 + nextCol) + ': ' + contextPrompt;
      addToContextHistory('user', stepDescription, sessionId);
      addToContextHistory('assistant', result, sessionId);
      
      var targetCol = String.fromCharCode(64 + nextCol);
      addSystemLog('‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è SmartChain: ' + targetCol + row + ' –≥–æ—Ç–æ–≤', 'INFO', 'SMART_CHAIN');
    } else {
      addSystemLog('‚ùå SmartChain: –æ—à–∏–±–∫–∞ Gemini - ' + result, 'ERROR', 'SMART_CHAIN');
    }
    
  } catch (error) {
    addSystemLog('‚ùå –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è SmartChain –æ—à–∏–±–∫–∞: ' + error.message, 'ERROR', 'SMART_CHAIN');
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ü–µ–ø–æ—á–∫–∏ –±–µ–∑ –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏
 */
function buildMinimalChainContext(filledCells, nextColIndex, row) {
  try {
    var nextCol = String.fromCharCode(64 + nextColIndex);
    
    // –î–ª—è –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞ (A‚ÜíB)
    if (filledCells.length === 1 && filledCells[0].column === 'A') {
      return '–ò—Å—Ö–æ–¥–Ω–∞—è –∑–∞–¥–∞—á–∞: ' + filledCells[0].value + 
             '\n\n–°–æ–∑–¥–∞–π –ø–µ—Ä–≤—ã–π —à–∞–≥ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ ' + nextCol + '.';
    }
    
    // –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤ (B‚ÜíC, C‚ÜíD –∏ —Ç.–¥.) - –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —è—á–µ–π–∫–∏
    if (filledCells.length >= 2) {
      var lastCell = filledCells[filledCells.length - 1];
      var prevCell = filledCells[filledCells.length - 2];
      
      return '–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (' + prevCell.column + '): ' + prevCell.value +
             '\n\n–¢–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (' + lastCell.column + '): ' + lastCell.value +
             '\n\n–ü—Ä–æ–¥–æ–ª–∂–∏ –ª–æ–≥–∏—á–µ—Å–∫—É—é —Ü–µ–ø–æ—á–∫—É –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ ' + nextCol + '.';
    }
    
    return '–ü—Ä–æ–¥–æ–ª–∂–∏ –∞–Ω–∞–ª–∏–∑ –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ ' + nextCol + '.';
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: ' + error.message, 'ERROR', 'SMART_CHAIN');
    return '–ü—Ä–æ–¥–æ–ª–∂–∏ –∞–Ω–∞–ª–∏–∑.';
  }
}

/**
 * Optimized Gemini call for chain processing
 */
function callGeminiForOptimizedChain(prompt, row) {
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è —Ü–µ–ø–æ—á–µ–∫
    return GM(prompt, 100000, 0.7);  // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Gemini –¥–ª—è —Ü–µ–ø–æ—á–∫–∏: ' + error.message, 'ERROR', 'SMART_CHAIN');
    return 'Error: ' + error.message;
  }
}