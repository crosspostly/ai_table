/**
 * Conditional Gemini Service
 * GM_IF —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å–ª–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
 */

/**
 * –£—Å–ª–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Gemini - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ
 */
function GM_IF(condition, prompt, maxTokens, temperature, _tick) {
  try {
    var condVal = false;
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤—Ö–æ–¥ –≤ –æ–¥–Ω–æ —Å–∫–∞–ª—è—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    var raw = condition;
    if (Array.isArray(raw)) {
      raw = (raw[0] && raw[0].length ? raw[0][0] : raw[0] || '');
    }
    
    var t = typeof raw;
    if (t === 'boolean') {
      condVal = raw === true;
    } else if (t === 'number') {
      condVal = raw !== 0;
    } else if (t === 'string') {
      var s = raw.trim().toLowerCase();
      // TRUE/FALSE –≤ –ª—é–±–æ–π –ª–æ–∫–∞–ª–∏: –ò–°–¢–ò–ù–ê/–õ–û–ñ–¨; —Ç–∞–∫–∂–µ 1/0; –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Üí false
      condVal = (s === 'true' || s === '–∏—Å—Ç–∏–Ω–∞' || s === '1' || s === '–¥–∞');
    } else {
      condVal = !!raw;
    }
    
    // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    if (!condVal) return "";
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º prompt
    if (Array.isArray(prompt)) prompt = prompt[0][0];
    if (!prompt || typeof prompt !== 'string' || !prompt.trim()) return "";
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    if (maxTokens == null) maxTokens = 25000;
    if (temperature == null) temperature = 0.7;
    
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é GM
    return GM(prompt, maxTokens, temperature);
  } catch (e) {
    logMessage('‚ùå GM_IF –æ—à–∏–±–∫–∞: ' + e.message, 'ERROR');
    return 'Error: ' + e.message;
  }
}

/**
 * –£—Å–ª–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è Gemini
 */
function GM_IF_STATIC(condition, prompt, maxTokens, temperature, _tick) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ —Ç–∞–∫ –∂–µ –∫–∞–∫ –≤ GM_IF
    var condVal = false;
    var raw = condition;
    if (Array.isArray(raw)) {
      raw = (raw[0] && raw[0].length ? raw[0][0] : raw[0] || '');
    }
    
    var t = typeof raw;
    if (t === 'boolean') {
      condVal = raw === true;
    } else if (t === 'number') {
      condVal = raw !== 0;
    } else if (t === 'string') {
      var s = raw.trim().toLowerCase();
      condVal = (s === 'true' || s === '–∏—Å—Ç–∏–Ω–∞' || s === '1' || s === '–¥–∞');
    } else {
      condVal = !!raw;
    }
    
    if (!condVal) return "";
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º prompt
    if (Array.isArray(prompt)) prompt = prompt[0][0];
    if (!prompt || typeof prompt !== 'string' || !prompt.trim()) return "";
    
    // –í—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –≤–µ—Ä—Å–∏—é
    return GM_STATIC(prompt, maxTokens, temperature);
  } catch (e) {
    logMessage('‚ùå GM_IF_STATIC –æ—à–∏–±–∫–∞: ' + e.message, 'ERROR');
    return 'Error: ' + e.message;
  }
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∫–æ–ª–æ–Ω–∫–∏ –≤ –±—É–∫–≤—É (A, B, C, ...)
 */
function columnToLetter(column) {
  var temp, letter = '';
  while (column > 0) {
    temp = (column - 1) % 26;
    letter = String.fromCharCode(temp + 65) + letter;
    column = (column - temp - 1) / 26;
  }
  return letter;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –±—É–∫–≤—ã –∫–æ–ª–æ–Ω–∫–∏ –≤ –Ω–æ–º–µ—Ä (A‚Üí1, B‚Üí2, ...)
 */
function letterToColumn(letters) {
  var s = String(letters || '').toUpperCase().trim();
  var col = 0;
  for (var i = 0; i < s.length; i++) {
    col = col * 26 + (s.charCodeAt(i) - 64);
  }
  return col;
}

/**
 * –ü–∞—Ä—Å–∏–Ω–≥ A1 –Ω–æ—Ç–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞!B3" –∏–ª–∏ "B3")
 */
function parseTargetA1(a1) {
  var raw = String(a1 || '').trim();
  if (!raw) throw new Error('–ü—É—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —è—á–µ–π–∫—É');
  
  var m = raw.match(/^([^!]+)!([A-Za-z]+)(\\d+)$/);
  var sheetName, colLetters, row;
  
  if (m) {
    sheetName = m[1];
    colLetters = m[2];
    row = parseInt(m[3], 10);
  } else {
    var m2 = raw.match(/^([A-Za-z]+)(\\d+)$/);
    if (!m2) throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —è—á–µ–π–∫–∏: ' + raw);
    sheetName = '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞'; // –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ª–∏—Å—Ç
    colLetters = m2[1];
    row = parseInt(m2[2], 10);
  }
  
  if (sheetName !== '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞') {
    throw new Error('–û–∂–∏–¥–∞–ª—Å—è –ª–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞", –ø–æ–ª—É—á–µ–Ω–æ: ' + sheetName);
  }
  
  var col = letterToColumn(colLetters);
  return { 
    sheetName: sheetName, 
    row: row, 
    col: col, 
    a1: (colLetters.toUpperCase() + row) 
  };
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ —Å –∞–≤—Ç–æ–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º Markdown
 */
function getCellValue(sheetName, row, col) {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheet = ss.getSheetByName(sheetName);
    if (!sheet) return null;
    
    var value = sheet.getRange(row, col).getValue();
    
    // –ê–≤—Ç–æ–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Markdown –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–∫—Ä–æ–º–µ –∫–æ–ª–æ–Ω–∫–∏ A)
    if (value && typeof value === 'string' && col > 1) {
      var processed = processGeminiResponse(value);
      if (processed !== value) {
        sheet.getRange(row, col).setValue(processed);
        logMessage('üîÑ Markdown –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ ' + sheet.getRange(row, col).getA1Notation(), 'INFO');
        return processed;
      }
    }
    
    return value;
  } catch (e) {
    logMessage('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —è—á–µ–π–∫–∏ ' + sheetName + '(' + row + ',' + col + '): ' + e.message, 'ERROR');
    return null;
  }
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –≤ —è—á–µ–π–∫—É
 */
function setFormulaToCell(row, col, formula) {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheet = ss.getSheetByName('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞');
    if (!sheet) {
      logMessage('‚ùå –õ–∏—Å—Ç "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω', 'ERROR');
      return false;
    }
    
    var cell = sheet.getRange(row, col);
    cell.setFormula(formula);
    logMessage('‚úÖ –§–æ—Ä–º—É–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ ' + cell.getA1Notation() + ': ' + formula.slice(0, 80) + '...', 'INFO');
    return true;
  } catch (e) {
    logMessage('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ—Ä–º—É–ª—ã –≤ (' + row + ',' + col + '): ' + e.message, 'ERROR');
    return false;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –∏–∑ Prompt_box
 */
function getPromptFormula(rowIndex) {
  try {
    var ss = SpreadsheetApp.getActive();
    var promptSheet = ss.getSheetByName('Prompt_box');
    if (!promptSheet) {
      logMessage('‚ùå –õ–∏—Å—Ç "Prompt_box" –Ω–µ –Ω–∞–π–¥–µ–Ω', 'ERROR');
      return null;
    }
    
    var rng = promptSheet.getRange(rowIndex, 6); // F
    var formula = rng.getFormula(); // –í–ê–ñ–ù–û: —Ñ–æ—Ä–º—É–ª–∞, –∞ –Ω–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if (!formula || !formula.trim()) {
      logMessage(`‚ÑπÔ∏è –§–æ—Ä–º—É–ª–∞ –≤ Prompt_box!F${rowIndex} –ø—É—Å—Ç–∞`, 'INFO');
      return null;
    }
    
    logMessage(`üì• –§–æ—Ä–º—É–ª–∞ –∏–∑ Prompt_box!F${rowIndex}: ${formula.slice(0,80)}...`, 'DEBUG');
    return formula;
  } catch (e) {
    logMessage('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª—ã –∏–∑ F' + rowIndex + ': ' + e.message, 'ERROR');
    return null;
  }
}