/**
 * Rules Engine v2.0
 * –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤–∏–ª –¥–ª—è —É–º–Ω–æ–π –∑–∞–º–µ–Ω—ã –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–µ
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–æ–º "–ü—Ä–∞–≤–∏–ª–∞" 
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª
 * - –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª
 * - –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª –∏ —Å—Å—ã–ª–æ–∫
 */

/**
 * –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
 */
var RULES_SHEET_NAME = '–ü—Ä–∞–≤–∏–ª–∞';

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ –ª–∏—Å—Ç–∞ "–ü—Ä–∞–≤–∏–ª–∞"
 * @return {Array<Object>} –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ {keyword: string, reference: string, description: string}
 */
function getRulesFromSheet() {
  try {
    var sheet = getOrCreateRulesSheet();
    var data = sheet.getDataRange().getValues();
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
    var rules = [];
    
    for (var i = 1; i < data.length; i++) {
      var row = data[i];
      var keyword = row[0] ? String(row[0]).trim() : '';
      var reference = row[1] ? String(row[1]).trim() : '';
      var description = row[2] ? String(row[2]).trim() : '';
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
      if (!keyword || !reference) continue;
      
      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
      if (!isValidReference(reference)) {
        addSystemLog('‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –≤ –ø—Ä–∞–≤–∏–ª–µ: "' + keyword + '" ‚Üí ' + reference, 'WARN', 'RULES_ENGINE');
        continue;
      }
      
      rules.push({
        keyword: keyword,
        reference: reference,
        description: description
      });
    }
    
    addSystemLog('üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–∞–≤–∏–ª: ' + rules.length, 'INFO', 'RULES_ENGINE');
    return rules;
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∞–≤–∏–ª: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return getDefaultRules(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –ª–∏—Å—Ç "–ü—Ä–∞–≤–∏–ª–∞"
 * @return {Sheet}
 */
function getOrCreateRulesSheet() {
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = spreadsheet.getSheetByName(RULES_SHEET_NAME);
  
  if (!sheet) {
    sheet = createRulesSheet(spreadsheet);
    addSystemLog('‚ú® –°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç "' + RULES_SHEET_NAME + '" —Å –±–∞–∑–æ–≤—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏', 'INFO', 'RULES_ENGINE');
  }
  
  return sheet;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ª–∏—Å—Ç "–ü—Ä–∞–≤–∏–ª–∞" —Å –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
 * @param {Spreadsheet} spreadsheet - —Ç–∞–±–ª–∏—Ü–∞
 * @return {Sheet}
 */
function createRulesSheet(spreadsheet) {
  try {
    var sheet = spreadsheet.insertSheet(RULES_SHEET_NAME);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    var headers = ['–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ', '–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–µ', '–û–ø–∏—Å–∞–Ω–∏–µ'];
    sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    var headerRange = sheet.getRange(1, 1, 1, headers.length);
    headerRange.setFontWeight('bold')
               .setBackground('#4285f4')
               .setFontColor('white')
               .setHorizontalAlignment('center');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
    var defaultRules = getDefaultRules();
    if (defaultRules.length > 0) {
      var rulesData = defaultRules.map(function(rule) {
        return [rule.keyword, rule.reference, rule.description];
      });
      
      sheet.getRange(2, 1, rulesData.length, 3).setValues(rulesData);
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
    sheet.setColumnWidth(1, 200); // –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    sheet.setColumnWidth(2, 150); // –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–µ
    sheet.setColumnWidth(3, 300); // –û–ø–∏—Å–∞–Ω–∏–µ
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    var instructionRow = 2 + defaultRules.length + 2;
    sheet.getRange(instructionRow, 1, 1, 3).merge();
    sheet.getRange(instructionRow, 1)
         .setValue('üìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø: –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –ø—Ä–∞–≤–∏–ª–∞ –Ω–∏–∂–µ. –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ - —Ç–æ, —á—Ç–æ –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å—Å—ã–ª–∫–∞ - –∫—É–¥–∞ —ç—Ç–æ –≤–µ–¥–µ—Ç.')
         .setFontStyle('italic')
         .setBackground('#f1f3f4');
    
    addSystemLog('‚úÖ –õ–∏—Å—Ç –ø—Ä–∞–≤–∏–ª —Å–æ–∑–¥–∞–Ω —Å ' + defaultRules.length + ' –±–∞–∑–æ–≤—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏', 'INFO', 'RULES_ENGINE');
    
    return sheet;
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ –ø—Ä–∞–≤–∏–ª: ' + error.message, 'ERROR', 'RULES_ENGINE');
    throw error;
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–∏—Å—Ç–µ–º—ã
 * @return {Array<Object>}
 */
function getDefaultRules() {
  return [
    {
      keyword: '–∞–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤',
      reference: '–û—Ç–∑—ã–≤—ã!C2',
      description: '–ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ —Å –ª–∏—Å—Ç–∞ "–û—Ç–∑—ã–≤—ã", –∫–æ–ª–æ–Ω–∫–∞ C, —Å—Ç—Ä–æ–∫–∞ 2'
    },
    {
      keyword: '–∞–Ω–∞–ª–∏–∑ –ø–æ—Å—Ç–æ–≤',
      reference: '–ü–æ—Å—Ç—ã!K2',
      description: '–ê–Ω–∞–ª–∏–∑ –ø–æ—Å—Ç–æ–≤ —Å –ª–∏—Å—Ç–∞ "–ü–æ—Å—Ç—ã", –∫–æ–ª–æ–Ω–∫–∞ K, —Å—Ç—Ä–æ–∫–∞ 2'
    },
    {
      keyword: '–Ω–∞—à–∞ –Ω–∏—à–∞',
      reference: '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞!A3',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∏—à–∏ —Å –ª–∏—Å—Ç–∞ "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞", —è—á–µ–π–∫–∞ A3'
    },
    {
      keyword: '–Ω–∏—à–∞',
      reference: '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞!A3',
      description: '–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∏—à–∏'
    },
    {
      keyword: '—Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è',
      reference: '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞!B3',
      description: '–¶–ê —Å –ª–∏—Å—Ç–∞ "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞", —è—á–µ–π–∫–∞ B3'
    },
    {
      keyword: '–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã',
      reference: '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞!C3',
      description: '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ —Å –ª–∏—Å—Ç–∞ "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞", —è—á–µ–π–∫–∞ C3'
    },
    {
      keyword: '–∫–æ–Ω—Ç–µ–Ω—Ç –ø–ª–∞–Ω',
      reference: '–ö–æ–Ω—Ç–µ–Ω—Ç!A:Z',
      description: '–í–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –ø–ª–∞–Ω —Å –ª–∏—Å—Ç–∞ "–ö–æ–Ω—Ç–µ–Ω—Ç"'
    },
    {
      keyword: '–ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã',
      reference: '–ü–æ—Å—Ç—ã!A2:J10',
      description: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ 9 –ø–æ—Å—Ç–æ–≤ –∏–∑ VK'
    },
    {
      keyword: '–æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤',
      reference: '–û—Ç–∑—ã–≤—ã!A2:C20',
      description: '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞'
    }
  ];
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —è—á–µ–π–∫—É/–¥–∏–∞–ø–∞–∑–æ–Ω
 * @param {string} reference - —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @return {boolean}
 */
function isValidReference(reference) {
  if (!reference || typeof reference !== 'string') return false;
  
  // –ë–∞–∑–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è Google Sheets —Å—Å—ã–ª–æ–∫:
  // –õ–∏—Å—Ç!A1, –õ–∏—Å—Ç!A1:B2, A1, A1:B2, –õ–∏—Å—Ç!A:A, A:A
  var patterns = [
    /^[A-Za-z–ê-–Ø–∞-—è0-9_\s]+![A-Z]+\d+$/,        // –õ–∏—Å—Ç!A1
    /^[A-Za-z–ê-–Ø–∞-—è0-9_\s]+![A-Z]+\d+:[A-Z]+\d+$/, // –õ–∏—Å—Ç!A1:B2
    /^[A-Za-z–ê-–Ø–∞-—è0-9_\s]+![A-Z]+:[A-Z]+$/,     // –õ–∏—Å—Ç!A:B
    /^[A-Z]+\d+$/,                               // A1
    /^[A-Z]+\d+:[A-Z]+\d+$/,                     // A1:B2
    /^[A-Z]+:[A-Z]+$/                            // A:B
  ];
  
  return patterns.some(function(pattern) {
    return pattern.test(reference.trim());
  });
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –≤ –ª–∏—Å—Ç
 * @param {string} keyword - –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
 * @param {string} reference - —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–µ
 * @param {string} description - –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
 * @return {boolean} - —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
 */
function addRule(keyword, reference, description) {
  try {
    if (!keyword || !reference) {
      throw new Error('–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏ —Å—Å—ã–ª–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
    }
    
    if (!isValidReference(reference)) {
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞: ' + reference);
    }
    
    var sheet = getOrCreateRulesSheet();
    var lastRow = sheet.getLastRow();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–æ –≤ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
    sheet.getRange(lastRow + 1, 1, 1, 3).setValues([[
      keyword.trim(),
      reference.trim(),
      description ? description.trim() : ''
    ]]);
    
    addSystemLog('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ: "' + keyword + '" ‚Üí ' + reference, 'INFO', 'RULES_ENGINE');
    return true;
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return false;
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç –ø—Ä–∞–≤–∏–ª–æ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
 * @param {string} keyword - –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 * @return {boolean} - —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
 */
function removeRule(keyword) {
  try {
    if (!keyword) return false;
    
    var sheet = getOrCreateRulesSheet();
    var data = sheet.getDataRange().getValues();
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
    for (var i = 1; i < data.length; i++) {
      if (String(data[i][0]).trim().toLowerCase() === keyword.trim().toLowerCase()) {
        sheet.deleteRow(i + 1);
        addSystemLog('üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ: "' + keyword + '"', 'INFO', 'RULES_ENGINE');
        return true;
      }
    }
    
    return false;
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return false;
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ
 * @param {string} oldKeyword - —Å—Ç–∞—Ä–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
 * @param {string} newKeyword - –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
 * @param {string} newReference - –Ω–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
 * @param {string} newDescription - –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
 * @return {boolean} - —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
function updateRule(oldKeyword, newKeyword, newReference, newDescription) {
  try {
    if (!oldKeyword || !newKeyword || !newReference) {
      throw new Error('–í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
    }
    
    if (!isValidReference(newReference)) {
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞: ' + newReference);
    }
    
    var sheet = getOrCreateRulesSheet();
    var data = sheet.getDataRange().getValues();
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
    for (var i = 1; i < data.length; i++) {
      if (String(data[i][0]).trim().toLowerCase() === oldKeyword.trim().toLowerCase()) {
        sheet.getRange(i + 1, 1, 1, 3).setValues([[
          newKeyword.trim(),
          newReference.trim(),
          newDescription ? newDescription.trim() : ''
        ]]);
        
        addSystemLog('üìù –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ: "' + oldKeyword + '" ‚Üí "' + newKeyword + '" (' + newReference + ')', 'INFO', 'RULES_ENGINE');
        return true;
      }
    }
    
    return false;
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return false;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º
 * @return {Object} - –æ–±—ä–µ–∫—Ç —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
 */
function getRulesStatistics() {
  try {
    var rules = getRulesFromSheet();
    var defaultRulesCount = getDefaultRules().length;
    var customRulesCount = Math.max(0, rules.length - defaultRulesCount);
    
    return {
      totalRules: rules.length,
      defaultRules: Math.min(rules.length, defaultRulesCount),
      customRules: customRulesCount,
      isRulesSheetExists: true
    };
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∞–≤–∏–ª: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return {
      totalRules: 0,
      defaultRules: 0,
      customRules: 0,
      isRulesSheetExists: false
    };
  }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –≤ JSON —Ñ–æ—Ä–º–∞—Ç
 * @return {string} - JSON —Å—Ç—Ä–æ–∫–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
 */
function exportRules() {
  try {
    var rules = getRulesFromSheet();
    return JSON.stringify(rules, null, 2);
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–∞–≤–∏–ª: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return '[]';
  }
}

/**
 * –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ JSON —Ñ–æ—Ä–º–∞—Ç–∞
 * @param {string} jsonRules - JSON —Å—Ç—Ä–æ–∫–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
 * @return {boolean} - —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞
 */
function importRules(jsonRules) {
  try {
    var rules = JSON.parse(jsonRules);
    
    if (!Array.isArray(rules)) {
      throw new Error('–ü—Ä–∞–≤–∏–ª–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º');
    }
    
    var sheet = getOrCreateRulesSheet();
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ (–∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞)
    if (sheet.getLastRow() > 1) {
      sheet.deleteRows(2, sheet.getLastRow() - 1);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
    if (rules.length > 0) {
      var rulesData = rules.map(function(rule) {
        return [
          rule.keyword || '',
          rule.reference || '',
          rule.description || ''
        ];
      });
      
      sheet.getRange(2, 1, rulesData.length, 3).setValues(rulesData);
    }
    
    addSystemLog('üì• –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∞–≤–∏–ª: ' + rules.length, 'INFO', 'RULES_ENGINE');
    return true;
    
  } catch (error) {
    addSystemLog('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∞–≤–∏–ª: ' + error.message, 'ERROR', 'RULES_ENGINE');
    return false;
  }
}