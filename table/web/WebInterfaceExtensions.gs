/**\n * –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Table AI\n * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞\n */\n\n/**\n * –ò–º–ø–æ—Ä—Ç –ø–æ—Å—Ç–æ–≤ –∏–∑ —Å–æ—Ü—Å–µ—Ç–µ–π (–¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)\n */\nfunction importSocialPosts(source, count, platform) {\n  try {\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n    if (!source || source.trim() === '') {\n      throw new Error('–ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');\n    }\n    \n    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ª–∏—Å—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã\n    var ss = SpreadsheetApp.getActive();\n    var paramsSheet = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');\n    if (!paramsSheet) {\n      paramsSheet = ss.insertSheet('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');\n    }\n    \n    paramsSheet.getRange('B1').setValue(source.trim());\n    paramsSheet.getRange('B2').setValue(count || 20);\n    if (platform && platform.trim() !== '') {\n      paramsSheet.getRange('C1').setValue(platform.trim());\n    }\n    \n    addSystemLog('Web interface import started: ' + source, 'INFO', 'WEB_INTERFACE');\n    \n    // –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–º–ø–æ—Ä—Ç–∞\n    var result = importVkPosts();\n    \n    addSystemLog('Web interface import completed', 'INFO', 'WEB_INTERFACE');\n    return result;\n    \n  } catch (error) {\n    addSystemLog('Web interface import error: ' + error.message, 'ERROR', 'WEB_INTERFACE');\n    throw error;\n  }\n}\n\n/**\n * –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Gemini –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n */\nfunction testGeminiConnection() {\n  try {\n    addSystemLog('Testing Gemini connection from web interface', 'INFO', 'WEB_INTERFACE');\n    \n    var result = GM('–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', 100, 0.5);\n    \n    if (result && !result.toString().startsWith('Error:')) {\n      addSystemLog('Gemini connection test successful', 'INFO', 'WEB_INTERFACE');\n      return {\n        success: true,\n        message: 'Gemini API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',\n        result: result.toString().substring(0, 100) + '...'\n      };\n    } else {\n      addSystemLog('Gemini connection test failed: ' + result, 'WARN', 'WEB_INTERFACE');\n      return {\n        success: false,\n        message: result || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',\n        result: null\n      };\n    }\n    \n  } catch (error) {\n    addSystemLog('Gemini connection test error: ' + error.message, 'ERROR', 'WEB_INTERFACE');\n    return {\n      success: false,\n      message: error.message,\n      result: null\n    };\n  }\n}\n\n/**\n * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ credentials –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n */\nfunction getClientCredentials() {\n  try {\n    var props = PropertiesService.getScriptProperties();\n    var email = props.getProperty('LICENSE_EMAIL');\n    var token = props.getProperty('LICENSE_TOKEN');\n    var apiKey = props.getProperty('GEMINI_API_KEY');\n    \n    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è credentials\n    var hasEmail = email && email.trim() !== '';\n    var hasToken = token && token.trim() !== '';\n    var hasApiKey = apiKey && apiKey.trim() !== '';\n    \n    if (!hasEmail || !hasToken) {\n      return {\n        ok: false,\n        error: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ license email –∏ token –≤ –º–µ–Ω—é\\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üîê –õ–∏—Ü–µ–Ω–∑–∏—è',\n        email: email,\n        token: token,\n        apiKey: apiKey\n      };\n    }\n    \n    if (!hasApiKey) {\n      return {\n        ok: false,\n        error: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Gemini API Key –≤ –º–µ–Ω—é\\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üîë API –∫–ª—é—á Gemini',\n        email: email,\n        token: token,\n        apiKey: apiKey\n      };\n    }\n    \n    return {\n      ok: true,\n      error: null,\n      email: email,\n      token: token,\n      apiKey: apiKey\n    };\n    \n  } catch (error) {\n    addSystemLog('Error checking credentials: ' + error.message, 'ERROR', 'WEB_INTERFACE');\n    return {\n      ok: false,\n      error: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ credentials: ' + error.message,\n      email: null,\n      token: null,\n      apiKey: null\n    };\n  }\n}\n\n/**\n * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞  \n */\nfunction validatePromptInput(prompt) {\n  if (!prompt) {\n    throw new Error('–ê—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º: prompt');\n  }\n  \n  if (typeof prompt !== 'string') {\n    throw new Error('–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');\n  }\n  \n  if (prompt.trim() === '') {\n    throw new Error('–ü—Ä–æ–º–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');\n  }\n  \n  return prompt.trim();\n}\n\n/**\n * –û–±—ë—Ä—Ç–∫–∞ GM —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π\n */\nfunction webGM(prompt, maxTokens, temperature) {\n  try {\n    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞\n    var validatedPrompt = validatePromptInput(prompt);\n    \n    addSystemLog('Web GM request: ' + validatedPrompt.substring(0, 50) + '...', 'INFO', 'WEB_INTERFACE');\n    \n    var result = GM(validatedPrompt, maxTokens, temperature);\n    \n    addSystemLog('Web GM response received', 'INFO', 'WEB_INTERFACE');\n    return result;\n    \n  } catch (error) {\n    addSystemLog('Web GM error: ' + error.message, 'ERROR', 'WEB_INTERFACE');\n    throw error;\n  }\n}"