/**
 * üî¨ –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê VK –ò–ú–ü–û–†–¢–ê
 * 
 * –¶–µ–ª—å: –ù–ê–ô–¢–ò –≥–¥–µ –∏–º–µ–Ω–Ω–æ –ª–æ–º–∞–µ—Ç—Å—è VK –∏–º–ø–æ—Ä—Ç
 * –õ–æ–≥–∏—Ä—É–µ—Ç –ö–ê–ñ–î–´–ô —à–∞–≥ —Å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ—á–Ω—ã–µ URL, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –æ—Ç–≤–µ—Ç—ã API
 */

/**
 * üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò VK
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –º–µ–Ω—é: DEV ‚Üí –ì–ª—É–±–æ–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ VK
 */
function deepVkDiagnostics() {
  var ui = SpreadsheetApp.getUi();
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  
  // === –ü–û–î–ì–û–¢–û–í–ö–ê –õ–ò–°–¢–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===
  var diagnosticSheet = ss.getSheetByName('vk_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
  if (!diagnosticSheet) {
    diagnosticSheet = ss.insertSheet('vk_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
  }
  diagnosticSheet.clear();
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  diagnosticSheet.getRange(1, 1, 1, 6).setValues([[
    '–í—Ä–µ–º—è', '–®–∞–≥', '–°—Ç–∞—Ç—É—Å', '–î–∞–Ω–Ω—ã–µ', '–î–µ—Ç–∞–ª–∏', '–û—à–∏–±–∫–∞'
  ]]);
  diagnosticSheet.getRange(1, 1, 1, 6).setFontWeight('bold').setBackground('#4285f4').setFontColor('#ffffff');
  
  var logRow = 2;
  
  function logDiagnostic(step, status, data, details, error) {
    var timestamp = new Date().toLocaleString('ru-RU');
    diagnosticSheet.getRange(logRow, 1, 1, 6).setValues([[
      timestamp, step, status, 
      JSON.stringify(data || {}), 
      details || '', 
      error || ''
    ]]);
    
    // –¶–≤–µ—Ç–æ–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    var statusCell = diagnosticSheet.getRange(logRow, 3);
    if (status === 'OK') {
      statusCell.setBackground('#d4edda').setFontColor('#155724');
    } else if (status === 'FAIL') {
      statusCell.setBackground('#f8d7da').setFontColor('#721c24').setFontWeight('bold');
    } else if (status === 'INFO') {
      statusCell.setBackground('#d1ecf1').setFontColor('#0c5460');
    }
    
    logRow++;
  }
  
  try {
    logDiagnostic('START', 'INFO', {}, '–ù–∞—á–∞–ª–æ –≥–ª—É–±–æ–∫–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ VK –∏–º–ø–æ—Ä—Ç–∞', '');
    
    // === –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê CREDENTIALS ===
    logDiagnostic('STEP 1/10', 'INFO', {}, '–ü—Ä–æ–≤–µ—Ä–∫–∞ CLIENT credentials', '');
    var creds;
    try {
      creds = getClientCredentials();
      if (!creds || !creds.ok) {
        logDiagnostic('CREDENTIALS', 'FAIL', creds, 'Credentials –Ω–µ OK', creds ? creds.error : 'null response');
        throw new Error('CLIENT credentials –ø—Ä–æ–≤–∞–ª–µ–Ω—ã');
      }
      logDiagnostic('CREDENTIALS', 'OK', { email: creds.email, hasToken: !!creds.token }, 'Email: ' + creds.email, '');
    } catch (e) {
      logDiagnostic('CREDENTIALS', 'FAIL', {}, '', e.message + '\n' + e.stack);
      throw e;
    }
    
    // === –®–ê–ì 2: –ü–†–û–í–ï–†–ö–ê –õ–ò–°–¢–ê –ü–ê–†–ê–ú–ï–¢–†–´ ===
    logDiagnostic('STEP 2/10', 'INFO', {}, '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Å—Ç–∞ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã', '');
    var paramsSheet = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
    if (!paramsSheet) {
      logDiagnostic('PARAMS_SHEET', 'FAIL', {}, '–õ–∏—Å—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω', '');
      throw new Error('–õ–∏—Å—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    }
    
    var b1 = paramsSheet.getRange('B1').getValue();
    var b2 = paramsSheet.getRange('B2').getValue();
    var c1 = paramsSheet.getRange('C1').getValue();
    
    logDiagnostic('PARAMS_SHEET', 'OK', { B1: b1, B2: b2, C1: c1 }, 'B1=' + b1 + ', B2=' + b2 + ', C1=' + c1, '');
    
    if (!b1) {
      logDiagnostic('PARAMS_B1', 'FAIL', {}, 'B1 (source) –ø—É—Å—Ç–æ–π', '');
      throw new Error('B1 –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω - —É–∫–∞–∂–∏—Ç–µ VK username/ID');
    }
    
    // === –®–ê–ì 3: –°–û–ï–î–ò–ù–ï–ù–ò–ï –° –°–ï–†–í–ï–†–û–ú ===
    logDiagnostic('STEP 3/10', 'INFO', {}, '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', '');
    try {
      var healthRequest = {
        action: 'health',
        email: creds.email,
        token: creds.token
      };
      
      logDiagnostic('SERVER_REQUEST', 'INFO', healthRequest, '–û—Ç–ø—Ä–∞–≤–∫–∞ health check', '');
      var healthResult = callServer(healthRequest);
      
      if (!healthResult || !healthResult.ok) {
        logDiagnostic('SERVER_HEALTH', 'FAIL', healthResult, '', healthResult ? healthResult.error : 'null response');
        throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      
      logDiagnostic('SERVER_HEALTH', 'OK', healthResult, 'Service: ' + (healthResult.service || 'unknown'), '');
    } catch (e) {
      logDiagnostic('SERVER_HEALTH', 'FAIL', {}, '', e.message + '\n' + e.stack);
      throw e;
    }
    
    // === –®–ê–ì 4: –ü–†–û–í–ï–†–ö–ê VK_TOKEN –ù–ê –°–ï–†–í–ï–†–ï ===
    logDiagnostic('STEP 4/10', 'INFO', {}, '–ü—Ä–æ–≤–µ—Ä–∫–∞ VK_TOKEN –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ', '');
    try {
      var vkTokenRequest = {
        action: 'vk_token_validate',
        email: creds.email,
        token: creds.token
      };
      
      logDiagnostic('VK_TOKEN_REQUEST', 'INFO', vkTokenRequest, '–ó–∞–ø—Ä–æ—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏ VK_TOKEN', '');
      var vkTokenResult = callServer(vkTokenRequest);
      
      logDiagnostic('VK_TOKEN_RESPONSE', vkTokenResult && vkTokenResult.ok ? 'OK' : 'FAIL', 
        vkTokenResult, 
        vkTokenResult && vkTokenResult.data ? JSON.stringify(vkTokenResult.data) : '', 
        vkTokenResult ? vkTokenResult.error : 'null response');
      
      if (!vkTokenResult || !vkTokenResult.ok) {
        throw new Error('VK_TOKEN –Ω–µ–≤–∞–ª–∏–¥–µ–Ω: ' + (vkTokenResult ? vkTokenResult.error : 'null'));
      }
    } catch (e) {
      logDiagnostic('VK_TOKEN_CHECK', 'FAIL', {}, '', e.message);
      // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–ª—å—à–µ
    }
    
    // === –®–ê–ì 5: –ü–ê–†–°–ò–ù–ì –ò–°–¢–û–ß–ù–ò–ö–ê ===
    logDiagnostic('STEP 5/10', 'INFO', {}, '–ü–∞—Ä—Å–∏–Ω–≥ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (B1)', '');
    try {
      var vkImportRequest = {
        action: 'vk_import_diagnostic',  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π action –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        email: creds.email,
        token: creds.token,
        owner: b1,
        count: b2 || 3  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∞
      };
      
      logDiagnostic('VK_IMPORT_REQUEST', 'INFO', vkImportRequest, 
        '–ó–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É: action=vk_import_diagnostic, owner=' + b1 + ', count=' + (b2 || 3), '');
      
      // === –®–ê–ì 6: –í–´–ó–û–í –°–ï–†–í–ï–†–ê –î–õ–Ø VK –ò–ú–ü–û–†–¢–ê ===
      logDiagnostic('STEP 6/10', 'INFO', {}, '–í—ã–∑–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è VK –∏–º–ø–æ—Ä—Ç–∞', '');
      
      var vkImportResult = callServer(vkImportRequest);
      
      logDiagnostic('VK_IMPORT_RESPONSE', 'INFO', vkImportResult, 
        '–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω. ok=' + (vkImportResult ? vkImportResult.ok : 'null'), '');
      
      if (!vkImportResult) {
        logDiagnostic('VK_IMPORT', 'FAIL', {}, '–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª null', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç action=vk_import_diagnostic');
        throw new Error('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª null –ø—Ä–∏ VK –∏–º–ø–æ—Ä—Ç–µ');
      }
      
      if (!vkImportResult.ok) {
        logDiagnostic('VK_IMPORT', 'FAIL', vkImportResult, 
          '–û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 
          vkImportResult.error || 'Unknown error');
        throw new Error('VK –∏–º–ø–æ—Ä—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: ' + (vkImportResult.error || 'Unknown error'));
      }
      
      if (!vkImportResult.data || !Array.isArray(vkImportResult.data)) {
        logDiagnostic('VK_IMPORT', 'FAIL', vkImportResult, 
          '–î–∞–Ω–Ω—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º', 
          '–û–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤, –ø–æ–ª—É—á–µ–Ω: ' + typeof vkImportResult.data);
        throw new Error('VK –∏–º–ø–æ—Ä—Ç –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      }
      
      logDiagnostic('VK_IMPORT', 'OK', { 
        postsCount: vkImportResult.data.length,
        firstPost: vkImportResult.data[0] || null
      }, '–ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: ' + vkImportResult.data.length, '');
      
      // === –®–ê–ì 7: –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–°–¢–û–í ===
      logDiagnostic('STEP 7/10', 'INFO', {}, '–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤', '');
      
      if (vkImportResult.data.length === 0) {
        logDiagnostic('POSTS_CHECK', 'FAIL', {}, '–ú–∞—Å—Å–∏–≤ –ø–æ—Å—Ç–æ–≤ –ø—É—Å—Ç–æ–π', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —É owner=' + b1 + ' –µ—Å—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ –ø–æ—Å—Ç—ã');
        throw new Error('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –ø–æ—Å—Ç–æ–≤');
      }
      
      var firstPost = vkImportResult.data[0];
      var requiredFields = ['date', 'link', 'text'];
      var missingFields = [];
      
      requiredFields.forEach(function(field) {
        if (!firstPost[field] && firstPost[field] !== '') {
          missingFields.push(field);
        }
      });
      
      if (missingFields.length > 0) {
        logDiagnostic('POSTS_CHECK', 'FAIL', firstPost, 
          '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: ' + missingFields.join(', '), '');
        throw new Error('–ü–æ—Å—Ç—ã –∏–º–µ—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
      }
      
      logDiagnostic('POSTS_CHECK', 'OK', firstPost, 
        '–ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –î–∞—Ç–∞: ' + firstPost.date + ', –¢–µ–∫—Å—Ç: ' + (firstPost.text || '').substring(0, 50), '');
      
      // === –®–ê–ì 8: –¢–ï–°–¢ –ó–ê–ü–ò–°–ò –í –õ–ò–°–¢ ===
      logDiagnostic('STEP 8/10', 'INFO', {}, '–¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –ø–æ—Å—Ç–æ–≤ –≤ –ª–∏—Å—Ç', '');
      
      var testSheet = ss.getSheetByName('vk_—Ç–µ—Å—Ç_–∏–º–ø–æ—Ä—Ç–∞');
      if (!testSheet) {
        testSheet = ss.insertSheet('vk_—Ç–µ—Å—Ç_–∏–º–ø–æ—Ä—Ç–∞');
      }
      testSheet.clear();
      
      try {
        var headers = ['–î–∞—Ç–∞', '–°—Å—ã–ª–∫–∞', '–¢–µ–∫—Å—Ç', '–ù–æ–º–µ—Ä'];
        var rows = [headers];
        
        vkImportResult.data.forEach(function(post, i) {
          rows.push([post.date, post.link, post.text || '', i + 1]);
        });
        
        testSheet.getRange(1, 1, rows.length, headers.length).setValues(rows);
        testSheet.getRange(1, 1, 1, headers.length).setFontWeight('bold').setBackground('#d4edda');
        
        logDiagnostic('WRITE_SHEET', 'OK', { rowsWritten: rows.length - 1 }, 
          '–ó–∞–ø–∏—Å–∞–Ω–æ ' + (rows.length - 1) + ' –ø–æ—Å—Ç–æ–≤ –≤ –ª–∏—Å—Ç vk_—Ç–µ—Å—Ç_–∏–º–ø–æ—Ä—Ç–∞', '');
      } catch (e) {
        logDiagnostic('WRITE_SHEET', 'FAIL', {}, '', e.message + '\n' + e.stack);
        throw e;
      }
      
      // === –®–ê–ì 9: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ===
      logDiagnostic('STEP 9/10', 'INFO', {}, '–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞', '');
      logDiagnostic('FINAL_CHECK', 'OK', {
        totalPosts: vkImportResult.data.length,
        source: b1,
        testSheetCreated: true
      }, '–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ', '');
      
      // === –®–ê–ì 10: –†–ï–ó–£–õ–¨–¢–ê–¢ ===
      logDiagnostic('STEP 10/10', 'INFO', {}, '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', '');
      logDiagnostic('COMPLETE', 'OK', {}, 
        'VK –ò–ú–ü–û–†–¢ –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û! –ü–æ–ª—É—á–µ–Ω–æ ' + vkImportResult.data.length + ' –ø–æ—Å—Ç–æ–≤', '');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      ui.alert('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 
        'VK –∏–º–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\\n\\n' +
        '–ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: ' + vkImportResult.data.length + '\\n' +
        '–ò—Å—Ç–æ—á–Ω–∏–∫: ' + b1 + '\\n\\n' +
        '–î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ –ª–∏—Å—Ç–µ "vk_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"\\n' +
        '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç–µ "vk_—Ç–µ—Å—Ç_–∏–º–ø–æ—Ä—Ç–∞"',
        ui.ButtonSet.OK);
      
    } catch (e) {
      logDiagnostic('DIAGNOSTIC_ERROR', 'FAIL', {}, '', e.message + '\n' + (e.stack || ''));
      
      ui.alert('‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—ã—è–≤–∏–ª–∞ –ø—Ä–æ–±–ª–µ–º—É', 
        '–û—à–∏–±–∫–∞: ' + e.message + '\\n\\n' +
        '–î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ –ª–∏—Å—Ç–µ "vk_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"\\n' +
        '–ù–∞–π–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å FAIL –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã',
        ui.ButtonSet.OK);
    }
    
  } catch (error) {
    logDiagnostic('CRITICAL_ERROR', 'FAIL', {}, '', error.message + '\n' + (error.stack || ''));
    
    ui.alert('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏', 
      '–û—à–∏–±–∫–∞: ' + error.message + '\\n\\n' +
      '–î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ –ª–∏—Å—Ç–µ "vk_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"',
      ui.ButtonSet.OK);
  } finally {
    // –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    diagnosticSheet.autoResizeColumns(1, 6);
  }
}

/**
 * üî¨ –£–ü–†–û–©–Å–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê - —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
 * –ù–ï —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞
 */
function testSimplifiedVkDiagnostic() {
  var ui = SpreadsheetApp.getUi();
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  
  var diagnosticSheet = ss.getSheetByName('vk_—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
  if (!diagnosticSheet) {
    diagnosticSheet = ss.insertSheet('vk_—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
  }
  diagnosticSheet.clear();
  
  diagnosticSheet.getRange(1, 1, 1, 5).setValues([[
    '–í—Ä–µ–º—è', '–®–∞–≥', '–°—Ç–∞—Ç—É—Å', '–î–∞–Ω–Ω—ã–µ', '–û—à–∏–±–∫–∞'
  ]]);
  diagnosticSheet.getRange(1, 1, 1, 5).setFontWeight('bold').setBackground('#4285f4').setFontColor('#ffffff');
  
  var logRow = 2;
  
  function log(step, status, data, error) {
    diagnosticSheet.getRange(logRow, 1, 1, 5).setValues([[
      new Date().toLocaleString('ru-RU'),
      step,
      status,
      JSON.stringify(data || {}).substring(0, 500),
      error || ''
    ]]);
    
    var statusCell = diagnosticSheet.getRange(logRow, 3);
    if (status === 'OK') {
      statusCell.setBackground('#d4edda');
    } else if (status === 'FAIL') {
      statusCell.setBackground('#f8d7da').setFontWeight('bold');
    }
    
    logRow++;
  }
  
  try {
    log('START', 'INFO', {}, '–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ VK –∏–º–ø–æ—Ä—Ç–∞');
    
    // –ß–∏—Ç–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    var paramsSheet = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
    if (!paramsSheet) {
      throw new Error('–õ–∏—Å—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    var owner = paramsSheet.getRange('B1').getValue();
    var count = paramsSheet.getRange('B2').getValue() || 3;
    
    log('PARAMS', 'OK', { owner: owner, count: count }, 'B1=' + owner + ', B2=' + count);
    
    // Credentials
    var creds = getClientCredentials();
    if (!creds || !creds.ok) {
      log('CREDENTIALS', 'FAIL', creds, 'Credentials –Ω–µ OK');
      throw new Error('Credentials –ø—Ä–æ–≤–∞–ª–µ–Ω—ã');
    }
    
    log('CREDENTIALS', 'OK', { email: creds.email }, 'Email: ' + creds.email);
    
    // –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π VK import
    log('VK_IMPORT', 'INFO', {}, '–ó–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ action=vk_import');
    
    var vkRequest = {
      action: 'vk_import',
      email: creds.email,
      token: creds.token,
      owner: owner,
      count: count
    };
    
    log('REQUEST', 'INFO', vkRequest, '–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
    
    var result = callServer(vkRequest);
    
    log('RESPONSE', 'INFO', result, '–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω');
    
    if (!result) {
      log('VK_IMPORT', 'FAIL', {}, '–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª null');
      throw new Error('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª null');
    }
    
    if (!result.ok) {
      log('VK_IMPORT', 'FAIL', result, '–û—à–∏–±–∫–∞: ' + (result.error || 'unknown'));
      throw new Error('VK –∏–º–ø–æ—Ä—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: ' + (result.error || 'unknown'));
    }
    
    if (!result.data || !Array.isArray(result.data.data)) {
      log('VK_IMPORT', 'FAIL', result, '–î–∞–Ω–Ω—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
    }
    
    var posts = result.data.data;
    log('VK_IMPORT', 'OK', { postsCount: posts.length }, '–ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: ' + posts.length);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç
    if (posts.length > 0) {
      var firstPost = posts[0];
      log('FIRST_POST', 'OK', firstPost, '–î–∞—Ç–∞: ' + firstPost.date + ', –¢–µ–∫—Å—Ç: ' + (firstPost.text || '').substring(0, 50));
    }
    
    log('COMPLETE', 'OK', {}, 'VK –ò–ú–ü–û–†–¢ –†–ê–ë–û–¢–ê–ï–¢! –ü–æ–ª—É—á–µ–Ω–æ ' + posts.length + ' –ø–æ—Å—Ç–æ–≤');
    
    ui.alert('‚úÖ VK –∏–º–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!', 
      '–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ ' + posts.length + ' –ø–æ—Å—Ç–æ–≤\\n' +
      '–ò—Å—Ç–æ—á–Ω–∏–∫: ' + owner + '\\n\\n' +
      '–î–µ—Ç–∞–ª–∏ –≤ –ª–∏—Å—Ç–µ "vk_—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"',
      ui.ButtonSet.OK);
    
  } catch (error) {
    log('ERROR', 'FAIL', {}, error.message + '\\n' + (error.stack || ''));
    
    ui.alert('‚ùå VK –∏–º–ø–æ—Ä—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω', 
      '–û—à–∏–±–∫–∞: ' + error.message + '\\n\\n' +
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—Å—Ç "vk_—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞" –¥–ª—è –¥–µ—Ç–∞–ª–µ–π',
      ui.ButtonSet.OK);
  } finally {
    diagnosticSheet.autoResizeColumns(1, 5);
  }
}

/**
 * üî¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–Ø–ú–û–ì–û VK API –í–´–ó–û–í–ê
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ VK API –ë–ï–ó —Å–µ—Ä–≤–µ—Ä–∞
 * –¢–†–ï–ë–£–ï–¢ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞ (action=get_vk_token)
 */
function testDirectVkApi() {
  var ui = SpreadsheetApp.getUi();
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  
  var diagnosticSheet = ss.getSheetByName('vk_direct_api_test');
  if (!diagnosticSheet) {
    diagnosticSheet = ss.insertSheet('vk_direct_api_test');
  }
  diagnosticSheet.clear();
  
  diagnosticSheet.getRange(1, 1, 1, 5).setValues([[
    '–í—Ä–µ–º—è', '–®–∞–≥', '–°—Ç–∞—Ç—É—Å', 'URL/–î–∞–Ω–Ω—ã–µ', '–û—à–∏–±–∫–∞'
  ]]);
  diagnosticSheet.getRange(1, 1, 1, 5).setFontWeight('bold').setBackground('#4285f4').setFontColor('#ffffff');
  
  var logRow = 2;
  
  function log(step, status, data, error) {
    diagnosticSheet.getRange(logRow, 1, 1, 5).setValues([[
      new Date().toLocaleString('ru-RU'),
      step,
      status,
      JSON.stringify(data || {}).substring(0, 500),
      error || ''
    ]]);
    
    var statusCell = diagnosticSheet.getRange(logRow, 3);
    if (status === 'OK') {
      statusCell.setBackground('#d4edda');
    } else if (status === 'FAIL') {
      statusCell.setBackground('#f8d7da').setFontWeight('bold');
    }
    
    logRow++;
  }
  
  try {
    log('START', 'INFO', {}, '–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ VK API –≤—ã–∑–æ–≤–∞ (–ë–ï–ó —Å–µ—Ä–≤–µ—Ä–∞)');
    
    // –ß–∏—Ç–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    var paramsSheet = ss.getSheetByName('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã');
    if (!paramsSheet) {
      throw new Error('–õ–∏—Å—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    var owner = paramsSheet.getRange('B1').getValue();
    var count = paramsSheet.getRange('B2').getValue() || 3;
    
    log('PARAMS', 'OK', { owner: owner, count: count }, '');
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å VK_TOKEN —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
    log('TOKEN_REQUEST', 'INFO', {}, '–ó–∞–ø—Ä–æ—Å VK_TOKEN —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä (–¢–†–ï–ë–£–ï–¢ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞!)');
    
    var creds = getClientCredentials();
    if (!creds || !creds.ok) {
      throw new Error('Credentials –Ω–µ OK');
    }
    
    var tokenRequest = {
      action: 'get_vk_token',
      email: creds.email,
      token: creds.token
    };
    
    var tokenResult = callServer(tokenRequest);
    
    if (!tokenResult || !tokenResult.ok || !tokenResult.data) {
      log('TOKEN', 'FAIL', tokenResult, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å VK_TOKEN –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –í–ï–†–û–Ø–¢–ù–û –°–ï–†–í–ï–† –ù–ï –û–ë–ù–û–í–õ–Å–ù!');
      log('HINT', 'INFO', {}, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ VK" –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞');
      throw new Error('VK_TOKEN –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ–±–Ω–æ–≤–ª—ë–Ω —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º');
    }
    
    var vkToken = tokenResult.data.token;
    log('TOKEN', 'OK', { tokenLength: vkToken.length }, 'VK_TOKEN –ø–æ–ª—É—á–µ–Ω (' + vkToken.length + ' —Å–∏–º–≤–æ–ª–æ–≤)');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è VK API
    var apiUrl = 'https://api.vk.com/method/wall.get';
    var params = {
      domain: String(owner),
      count: Math.min(parseInt(count), 100),
      access_token: vkToken,
      v: '5.131'
    };
    
    var fullUrl = apiUrl + '?' + Object.keys(params).map(function(key) {
      return key + '=' + encodeURIComponent(params[key]);
    }).join('&');
    
    log('API_URL', 'INFO', { url: fullUrl.replace(vkToken, 'TOKEN_HIDDEN') }, 'URL —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    log('API_REQUEST', 'INFO', {}, '–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ VK API');
    
    var response = UrlFetchApp.fetch(fullUrl, {
      muteHttpExceptions: true
    });
    
    var statusCode = response.getResponseCode();
    var responseText = response.getContentText();
    
    log('API_RESPONSE', statusCode === 200 ? 'OK' : 'FAIL', {
      statusCode: statusCode,
      responseLength: responseText.length,
      responsePreview: responseText.substring(0, 200)
    }, statusCode !== 200 ? 'HTTP ' + statusCode : '');
    
    if (statusCode !== 200) {
      throw new Error('HTTP ' + statusCode + ': ' + responseText);
    }
    
    // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
    var jsonResponse = JSON.parse(responseText);
    
    if (jsonResponse.error) {
      log('API_ERROR', 'FAIL', jsonResponse.error, JSON.stringify(jsonResponse.error));
      throw new Error('VK API Error: ' + JSON.stringify(jsonResponse.error));
    }
    
    if (!jsonResponse.response || !jsonResponse.response.items) {
      log('API_FORMAT', 'FAIL', jsonResponse, '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞');
      throw new Error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ VK API');
    }
    
    var posts = jsonResponse.response.items;
    log('API_PARSE', 'OK', {
      postsCount: posts.length,
      firstPost: posts[0] ? {
        id: posts[0].id,
        date: posts[0].date,
        textLength: (posts[0].text || '').length
      } : null
    }, '–ü–æ—Å—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã –∏ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω—ã');
    
    log('COMPLETE', 'OK', { totalPosts: posts.length }, '–ü–†–Ø–ú–û–ô VK API –†–ê–ë–û–¢–ê–ï–¢!');
    
    ui.alert('‚úÖ –ü—Ä—è–º–æ–π VK API —Ä–∞–±–æ—Ç–∞–µ—Ç', 
      '–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ ' + posts.length + ' –ø–æ—Å—Ç–æ–≤\\n' +
      '–ò—Å—Ç–æ—á–Ω–∏–∫: ' + owner + '\\n\\n' +
      '–î–µ—Ç–∞–ª–∏ –≤ –ª–∏—Å—Ç–µ "vk_direct_api_test"',
      ui.ButtonSet.OK);
    
  } catch (error) {
    log('ERROR', 'FAIL', {}, error.message + '\\n' + (error.stack || ''));
    
    ui.alert('‚ùå –ü—Ä—è–º–æ–π VK API –ø—Ä–æ–≤–∞–ª–µ–Ω', 
      '–û—à–∏–±–∫–∞: ' + error.message + '\\n\\n' +
      '–î–µ—Ç–∞–ª–∏ –≤ –ª–∏—Å—Ç–µ "vk_direct_api_test"',
      ui.ButtonSet.OK);
  } finally {
    diagnosticSheet.autoResizeColumns(1, 5);
  }
}
