/**
 * Comprehensive Social Media Import Tests v1.0
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ—Å—Ç–æ–≤ –∏–∑ Instagram, Telegram –∏ VK
 * —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
 */

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
 */
function runAllSocialImportTests() {
  addSystemLog('üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π', 'INFO', 'TESTS');
  
  var results = {
    total: 0,
    passed: 0,
    failed: 0,
    details: []
  };
  
  // –¢–µ—Å—Ç—ã Instagram
  var instagramTests = testInstagramParsing();
  results.total += instagramTests.length;
  results.passed += instagramTests.filter(function(t) { return t.passed; }).length;
  results.failed += instagramTests.filter(function(t) { return !t.passed; }).length;
  results.details = results.details.concat(instagramTests);
  
  // –¢–µ—Å—Ç—ã Telegram
  var telegramTests = testTelegramParsing();
  results.total += telegramTests.length;
  results.passed += telegramTests.filter(function(t) { return t.passed; }).length;
  results.failed += telegramTests.filter(function(t) { return !t.passed; }).length;
  results.details = results.details.concat(telegramTests);
  
  // –¢–µ—Å—Ç—ã VK
  var vkTests = testVKParsing();
  results.total += vkTests.length;
  results.passed += vkTests.filter(function(t) { return t.passed; }).length;
  results.failed += vkTests.filter(function(t) { return !t.passed; }).length;
  results.details = results.details.concat(vkTests);
  
  // –¢–µ—Å—Ç—ã –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  var logicTests = testPlatformDetectionLogic();
  results.total += logicTests.length;
  results.passed += logicTests.filter(function(t) { return t.passed; }).length;
  results.failed += logicTests.filter(function(t) { return !t.passed; }).length;
  results.details = results.details.concat(logicTests);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ª–∏—Å—Ç
  writeTestResultsToSheet(results);
  
  addSystemLog('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ' + results.passed + '/' + results.total + ' –ø—Ä–æ—à–ª–∏', 
                results.failed > 0 ? 'WARN' : 'INFO', 'TESTS');
  
  return results;
}

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
function testInstagramParsing() {
  addSystemLog('üì∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram...', 'INFO', 'TESTS');
  
  var tests = [];
  
  // –†–µ–∞–ª—å–Ω—ã–µ Instagram –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  var testAccounts = [
    { username: 'instagram', description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram' },
    { username: 'cristiano', description: '–ö—Ä–∏—à—Ç–∏–∞–Ω—É –†–æ–Ω–∞–ª–¥—É - –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç' },
    { username: 'selenagomez', description: '–°–µ–ª–µ–Ω–∞ –ì–æ–º–µ—Å - –º–Ω–æ–≥–æ –ø–æ—Å—Ç–æ–≤' },
    { username: 'therock', description: '–î—É—ç–π–Ω –î–∂–æ–Ω—Å–æ–Ω - –∞–∫—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç' }
  ];
  
  testAccounts.forEach(function(account) {
    tests.push(runSingleTest('Instagram: ' + account.username, function() {
      var posts = importInstagramPosts(account.username, 5);
      
      if (!posts || posts.length === 0) {
        throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞
      var firstPost = posts[0];
      if (!firstPost.platform || firstPost.platform !== 'instagram') {
        throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ' + firstPost.platform);
      }
      
      if (!firstPost.text && !firstPost.link) {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç text –∏ link');
      }
      
      if (!firstPost.date || !(firstPost.date instanceof Date)) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞: ' + firstPost.date);
      }
      
      if (!firstPost.id) {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –ø–æ—Å—Ç–∞');
      }
      
      return {
        success: true,
        posts: posts.length,
        sample: {
          text: firstPost.text.substring(0, 50) + '...',
          link: firstPost.link,
          date: firstPost.date,
          likes: firstPost.likes
        }
      };
    }));
  });
  
  return tests;
}

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
function testTelegramParsing() {
  addSystemLog('üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram...', 'INFO', 'TESTS');
  
  var tests = [];
  
  // –†–µ–∞–ª—å–Ω—ã–µ –ø—É–±–ª–∏—á–Ω—ã–µ Telegram –∫–∞–Ω–∞–ª—ã
  var testChannels = [
    { name: 'durov', description: '–ü–∞–≤–µ–ª –î—É—Ä–æ–≤ - –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å Telegram' },
    { name: 'breakingmash', description: 'Breaking Mash - –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª' },
    { name: 'varlamov_news', description: '–í–∞—Ä–ª–∞–º–æ–≤ - –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –±–ª–æ–≥–µ—Ä' },
    { name: 'tproger', description: '–¢–∏–ø–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç' }
  ];
  
  testChannels.forEach(function(channel) {
    tests.push(runSingleTest('Telegram: ' + channel.name, function() {
      var posts = importTelegramPosts(channel.name, 3);
      
      if (!posts || posts.length === 0) {
        throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞
      var firstPost = posts[0];
      if (!firstPost.platform || firstPost.platform !== 'telegram') {
        throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ' + firstPost.platform);
      }
      
      if (!firstPost.text && !firstPost.link) {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç text –∏ link');
      }
      
      if (!firstPost.date || !(firstPost.date instanceof Date)) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞: ' + firstPost.date);
      }
      
      return {
        success: true,
        posts: posts.length,
        method: posts[0].method || 'unknown',
        sample: {
          text: firstPost.text.substring(0, 50) + '...',
          link: firstPost.link,
          views: firstPost.views || 0
        }
      };
    }));
  });
  
  return tests;
}

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VK –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
function testVKParsing() {
  addSystemLog('üî∑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VK...', 'INFO', 'TESTS');
  
  var tests = [];
  
  // –†–µ–∞–ª—å–Ω—ã–µ VK –∏—Å—Ç–æ—á–Ω–∏–∫–∏
  var testSources = [
    { source: 'durov', description: '–ü–∞–≤–µ–ª –î—É—Ä–æ–≤ - –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å VK' },
    { source: '-1', description: 'API VKontakte - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞' },
    { source: 'thecoderblog', description: '–ü–æ–ø—É–ª—è—Ä–Ω–∞—è IT –≥—Ä—É–ø–ø–∞' },
    { source: 'club1', description: '–ü–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞ VK' }
  ];
  
  testSources.forEach(function(src) {
    tests.push(runSingleTest('VK: ' + src.source, function() {
      var posts = importVkPostsAdvanced(src.source, 3);
      
      if (!posts || posts.length === 0) {
        throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞
      var firstPost = posts[0];
      if (!firstPost.platform || firstPost.platform !== 'vk') {
        throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ' + firstPost.platform);
      }
      
      if (!firstPost.link) {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç');
      }
      
      if (!firstPost.date || !(firstPost.date instanceof Date)) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞: ' + firstPost.date);
      }
      
      if (!firstPost.id) {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –ø–æ—Å—Ç–∞');
      }
      
      return {
        success: true,
        posts: posts.length,
        sample: {
          text: firstPost.text.substring(0, 50) + '...',
          link: firstPost.link,
          likes: firstPost.likes || 0,
          comments: firstPost.comments || 0
        }
      };
    }));
  });
  
  return tests;
}

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
 */
function testPlatformDetectionLogic() {
  addSystemLog('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...', 'INFO', 'TESTS');
  
  var tests = [];
  
  // –¢–µ—Å—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–∞–º
  var autoDetectionTests = [
    {
      input: 'https://instagram.com/durov',
      expected: 'instagram',
      description: 'Instagram –ø–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞'
    },
    {
      input: 'https://www.instagram.com/selenagomez',
      expected: 'instagram', 
      description: 'Instagram —Å—Å—ã–ª–∫–∞ —Å www'
    },
    {
      input: 'https://t.me/durov',
      expected: 'telegram',
      description: 'Telegram –ø–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞'
    },
    {
      input: 'https://telegram.me/breakingmash',
      expected: 'telegram',
      description: 'Telegram –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–æ–º–µ–Ω'
    },
    {
      input: 'https://vk.com/durov',
      expected: 'vk',
      description: 'VK –ø–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞'
    },
    {
      input: 'https://www.vk.com/club1',
      expected: 'vk',
      description: 'VK —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É'
    }
  ];
  
  autoDetectionTests.forEach(function(test) {
    tests.push(runSingleTest('–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: ' + test.description, function() {
      var result = parseSource(test.input, null);
      
      if (result.platform !== test.expected) {
        throw new Error('–û–∂–∏–¥–∞–ª–æ—Å—å: ' + test.expected + ', –ø–æ–ª—É—á–µ–Ω–æ: ' + result.platform);
      }
      
      return {
        success: true,
        input: test.input,
        detected: result.platform,
        type: result.type
      };
    }));
  });
  
  // –¢–µ—Å—Ç—ã —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  var explicitPlatformTests = [
    {
      input: 'durov',
      platform: 'telegram',
      description: '–ü—Ä–æ—Å—Ç–æ–π username —Å —É–∫–∞–∑–∞–Ω–∏–µ–º TG'
    },
    {
      input: '@durov',
      platform: 'vk',
      description: '@username —Å —É–∫–∞–∑–∞–Ω–∏–µ–º VK' 
    },
    {
      input: '-123456',
      platform: 'telegram',
      description: '–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID —Å —É–∫–∞–∑–∞–Ω–∏–µ–º TG'
    },
    {
      input: 'lena_insait',
      platform: 'instagram',
      description: 'Username —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º –¥–ª—è Instagram'
    }
  ];
  
  explicitPlatformTests.forEach(function(test) {
    tests.push(runSingleTest('–Ø–≤–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ' + test.description, function() {
      var result = parseSource(test.input, test.platform);
      
      if (result.platform !== test.platform) {
        throw new Error('–û–∂–∏–¥–∞–ª–æ—Å—å: ' + test.platform + ', –ø–æ–ª—É—á–µ–Ω–æ: ' + result.platform);
      }
      
      if (result.type !== 'explicit') {
        throw new Error('–û–∂–∏–¥–∞–ª—Å—è —Ç–∏–ø: explicit, –ø–æ–ª—É—á–µ–Ω–æ: ' + result.type);
      }
      
      return {
        success: true,
        input: test.input,
        platform: test.platform,
        type: result.type
      };
    }));
  });
  
  // –¢–µ—Å—Ç—ã –æ—à–∏–±–æ–∫ (–¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è)
  var errorTests = [
    {
      input: 'durov',
      platform: null,
      description: '–ü—Ä–æ—Å—Ç–æ–π username –±–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'
    },
    {
      input: '@channel123',
      platform: null,
      description: '@username –±–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'
    },
    {
      input: '-987654321',
      platform: null,
      description: 'ID –±–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'
    }
  ];
  
  errorTests.forEach(function(test) {
    tests.push(runSingleTest('–û—à–∏–±–∫–∞: ' + test.description, function() {
      try {
        parseSource(test.input, test.platform);
        throw new Error('–î–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –≤—ã–±—Ä–æ—à–µ–Ω–∞ –æ—à–∏–±–∫–∞, –Ω–æ –µ—ë –Ω–µ –±—ã–ª–æ');
      } catch (e) {
        if (e.message.includes('—É–∫–∞–∂–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É')) {
          return {
            success: true,
            input: test.input,
            expectedError: true,
            errorMessage: e.message.substring(0, 50) + '...'
          };
        } else {
          throw e; // –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
        }
      }
    }));
  });
  
  return tests;
}

/**
 * –ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */
function runSingleTest(name, testFunction) {
  var startTime = new Date();
  
  try {
    var result = testFunction();
    var duration = new Date() - startTime;
    
    addSystemLog('‚úÖ ' + name + ' - –ü–†–û–®–Å–õ (' + duration + '–º—Å)', 'INFO', 'TESTS');
    
    return {
      name: name,
      passed: true,
      duration: duration,
      details: result,
      error: null
    };
    
  } catch (error) {
    var duration = new Date() - startTime;
    
    addSystemLog('‚ùå ' + name + ' - –ü–†–û–í–ê–õ–ï–ù: ' + error.message, 'ERROR', 'TESTS');
    
    return {
      name: name,
      passed: false,
      duration: duration,
      details: null,
      error: error.message
    };
  }
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –≤ Google Sheets
 */
function writeTestResultsToSheet(results) {
  try {
    var ss = SpreadsheetApp.getActive();
    var sheetName = 'TestResults_' + Utilities.formatDate(new Date(), 'GMT+3', 'yyyy-MM-dd_HH-mm');
    var sheet = ss.insertSheet(sheetName);
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    var headers = [
      '–¢–µ—Å—Ç', '–°—Ç–∞—Ç—É—Å', '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º—Å)', '–î–µ—Ç–∞–ª–∏', '–û—à–∏–±–∫–∞', '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'
    ];
    sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    var headerRange = sheet.getRange(1, 1, 1, headers.length);
    headerRange.setBackground('#4285f4').setFontColor('white').setFontWeight('bold');
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    var data = results.details.map(function(test) {
      return [
        test.name,
        test.passed ? '‚úÖ –ü–†–û–®–Å–õ' : '‚ùå –ü–†–û–í–ê–õ–ï–ù',
        test.duration,
        test.details ? JSON.stringify(test.details) : '',
        test.error || '',
        new Date()
      ];
    });
    
    if (data.length > 0) {
      sheet.getRange(2, 1, data.length, headers.length).setValues(data);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—É–º–º–∞—Ä–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    sheet.getRange(data.length + 3, 1, 1, 6).setValues([[
      '–ò–¢–û–ì–û:', 
      results.passed + '/' + results.total + ' –ø—Ä–æ—à–ª–∏',
      '',
      '–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ' + Math.round((results.passed / results.total) * 100) + '%',
      results.failed + ' –ø—Ä–æ–≤–∞–ª–µ–Ω—ã',
      new Date()
    ]]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    var summaryRange = sheet.getRange(data.length + 3, 1, 1, 6);
    summaryRange.setBackground('#f0f0f0').setFontWeight('bold');
    
    // –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
    sheet.autoResizeColumns(1, headers.length);
    
    addSystemLog('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ª–∏—Å—Ç: ' + sheetName, 'INFO', 'TESTS');
    
  } catch (error) {
    addSystemLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ' + error.message, 'ERROR', 'TESTS');
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */
function runQuickSmokeTests() {
  addSystemLog('üî• –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö smoke-—Ç–µ—Å—Ç–æ–≤...', 'INFO', 'TESTS');
  
  var tests = [];
  
  // –¢–µ—Å—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
  tests.push(runSingleTest('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —Ç–≥ ‚Üí telegram', function() {
    var result = normalizePlatformName('—Ç–≥');
    if (result !== 'telegram') {
      throw new Error('–û–∂–∏–¥–∞–ª–æ—Å—å: telegram, –ø–æ–ª—É—á–µ–Ω–æ: ' + result);
    }
    return { success: true };
  }));
  
  tests.push(runSingleTest('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –∏–Ω—Å—Ç–∞ ‚Üí instagram', function() {
    var result = normalizePlatformName('–∏–Ω—Å—Ç–∞');
    if (result !== 'instagram') {
      throw new Error('–û–∂–∏–¥–∞–ª–æ—Å—å: instagram, –ø–æ–ª—É—á–µ–Ω–æ: ' + result);
    }
    return { success: true };
  }));
  
  tests.push(runSingleTest('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –≤–∫ ‚Üí vk', function() {
    var result = normalizePlatformName('–≤–∫');
    if (result !== 'vk') {
      throw new Error('–û–∂–∏–¥–∞–ª–æ—Å—å: vk, –ø–æ–ª—É—á–µ–Ω–æ: ' + result);
    }
    return { success: true };
  }));
  
  // –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã parseSource
  tests.push(runSingleTest('parseSource: Instagram URL', function() {
    var result = parseSource('https://instagram.com/test', null);
    if (result.platform !== 'instagram') {
      throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ' + result.platform);
    }
    return { success: true, result: result };
  }));
  
  var passed = tests.filter(function(t) { return t.passed; }).length;
  var total = tests.length;
  
  addSystemLog('üî• Smoke-—Ç–µ—Å—Ç—ã: ' + passed + '/' + total + ' –ø—Ä–æ—à–ª–∏', 
                passed === total ? 'INFO' : 'WARN', 'TESTS');
  
  return {
    total: total,
    passed: passed,
    failed: total - passed,
    details: tests
  };
}