/**
 * –ú–û–ö-–¢–ï–°–¢–´ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–æ–≤
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
 */

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –º–æ–∫-—Ç–µ—Å—Ç–æ–≤
 */
function runMockFixValidationTests() {
  Logger.log('üß™ === –ó–ê–ü–£–°–ö –ú–û–ö-–¢–ï–°–¢–û–í –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô ===');
  
  var results = {
    total: 0,
    passed: 0,
    failed: 0,
    details: []
  };
  
  // –¢–µ—Å—Ç 1: –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ SYSTEM_LOGS_NAME
  results.details.push(testSystemLogsConstant());
  
  // –¢–µ—Å—Ç 2: handleWallGet_ –¥–æ—Å—Ç—É–ø–Ω–∞
  results.details.push(testHandleWallGetExists());
  
  // –¢–µ—Å—Ç 3: createStopWordsFormulas –¥–æ—Å—Ç—É–ø–Ω–∞
  results.details.push(testCreateStopWordsFormulasExists());
  
  // –¢–µ—Å—Ç 4: applyUniformFormatting –¥–æ—Å—Ç—É–ø–Ω–∞
  results.details.push(testApplyUniformFormattingExists());
  
  // –¢–µ—Å—Ç 5: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ writePostsToSheet (–º–æ–∫)
  results.details.push(testWritePostsToSheetStructure());
  
  // –¢–µ—Å—Ç 6: importVkPostsAdvanced –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–º–æ–∫)
  results.details.push(testImportVkPostsAdvancedMapping());
  
  // –ü–æ–¥—Å—á—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  results.total = results.details.length;
  results.passed = results.details.filter(function(t) { return t.passed; }).length;
  results.failed = results.total - results.passed;
  
  // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  Logger.log('');
  Logger.log('üìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ú–û–ö-–¢–ï–°–¢–û–í ===');
  Logger.log('‚úÖ –ü—Ä–æ—à–ª–∏: ' + results.passed + '/' + results.total);
  Logger.log('‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω—ã: ' + results.failed);
  Logger.log('');
  
  results.details.forEach(function(test) {
    var icon = test.passed ? '‚úÖ' : '‚ùå';
    Logger.log(icon + ' ' + test.name + (test.error ? ' | –û—à–∏–±–∫–∞: ' + test.error : ''));
  });
  
  Logger.log('');
  
  if (results.failed === 0) {
    Logger.log('üéâ –í–°–ï –ú–û–ö-–¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
  } else {
    Logger.log('‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–í–ê–õ–ï–ù–ù–´–ï –¢–ï–°–¢–´!');
  }
  
  return results;
}

/**
 * –¢–µ—Å—Ç 1: –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ SYSTEM_LOGS_NAME —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 */
function testSystemLogsConstant() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
    if (typeof SYSTEM_LOGS_NAME === 'undefined') {
      throw new Error('SYSTEM_LOGS_NAME –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    if (SYSTEM_LOGS_NAME !== 'SYSTEM_LOGS') {
      throw new Error('–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ SYSTEM_LOGS_NAME: ' + SYSTEM_LOGS_NAME);
    }
    
    return {
      name: '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ SYSTEM_LOGS_NAME',
      passed: true,
      error: null
    };
  } catch (e) {
    return {
      name: '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ SYSTEM_LOGS_NAME',
      passed: false,
      error: e.message
    };
  }
}

/**
 * –¢–µ—Å—Ç 2: handleWallGet_ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 */
function testHandleWallGetExists() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
    if (typeof handleWallGet_ !== 'function') {
      throw new Error('handleWallGet_ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π');
    }
    
    return {
      name: '–§—É–Ω–∫—Ü–∏—è handleWallGet_ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      passed: true,
      error: null
    };
  } catch (e) {
    return {
      name: '–§—É–Ω–∫—Ü–∏—è handleWallGet_ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      passed: false,
      error: e.message
    };
  }
}

/**
 * –¢–µ—Å—Ç 3: createStopWordsFormulas —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 */
function testCreateStopWordsFormulasExists() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
    if (typeof createStopWordsFormulas !== 'function') {
      throw new Error('createStopWordsFormulas –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π');
    }
    
    return {
      name: '–§—É–Ω–∫—Ü–∏—è createStopWordsFormulas —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      passed: true,
      error: null
    };
  } catch (e) {
    return {
      name: '–§—É–Ω–∫—Ü–∏—è createStopWordsFormulas —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      passed: false,
      error: e.message
    };
  }
}

/**
 * –¢–µ—Å—Ç 4: applyUniformFormatting —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 */
function testApplyUniformFormattingExists() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
    if (typeof applyUniformFormatting !== 'function') {
      throw new Error('applyUniformFormatting –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π');
    }
    
    return {
      name: '–§—É–Ω–∫—Ü–∏—è applyUniformFormatting —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      passed: true,
      error: null
    };
  } catch (e) {
    return {
      name: '–§—É–Ω–∫—Ü–∏—è applyUniformFormatting —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      passed: false,
      error: e.message
    };
  }
}

/**
 * –¢–µ—Å—Ç 5: writePostsToSheet —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–º–æ–∫)
 */
function testWritePostsToSheetStructure() {
  try {
    // –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–æ–≤
    var mockPosts = [
      {
        platform: 'vk',
        date: '2024-01-15 12:00',
        link: 'https://vk.com/wall-1_123',
        text: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç',
        id: 1,
        likes: 10,
        comments: 5
      }
    ];
    
    // –°–æ–∑–¥–∞—ë–º –º–æ–∫-—Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å writePostsToSheet
    var expectedHeaders = [
      '–î–∞—Ç–∞', '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç', '–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞', '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞',
      '–°—Ç–æ–ø-—Å–ª–æ–≤–∞', '–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã', '–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä',
      '–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Å–ª–æ–≤–∞', '–ü–æ—Å—Ç—ã —Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏', '–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä (–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ)',
      '–ê–Ω–∞–ª–∏–∑ –ø–æ—Å—Ç–æ–≤'
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫
    if (expectedHeaders.length !== 11) {
      throw new Error('–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ –≤ headers: ' + expectedHeaders.length + ' (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 11)');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –∫–æ–ª–æ–Ω–∫—É
    if (expectedHeaders[0] !== '–î–∞—Ç–∞') {
      throw new Error('–ü–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "–î–∞—Ç–∞", –∞ –Ω–µ "' + expectedHeaders[0] + '"');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞" –≤ –Ω–∞—á–∞–ª–µ
    if (expectedHeaders[0] === '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞') {
      throw new Error('–ö–æ–ª–æ–Ω–∫–∞ "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞" –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –Ω–∞—á–∞–ª–µ (—Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)');
    }
    
    return {
      name: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ writePostsToSheet (—Å—Ç–∞—Ä–∞—è, –±–µ–∑ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã)',
      passed: true,
      error: null
    };
  } catch (e) {
    return {
      name: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ writePostsToSheet (—Å—Ç–∞—Ä–∞—è, –±–µ–∑ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã)',
      passed: false,
      error: e.message
    };
  }
}

/**
 * –¢–µ—Å—Ç 6: importVkPostsAdvanced –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ (–º–æ–∫)
 */
function testImportVkPostsAdvancedMapping() {
  try {
    // –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –æ—Ç handleWallGet_
    var mockHandleWallGetResult = [
      {
        date: '2024-01-15 12:00',
        link: 'https://vk.com/wall-1_123',
        text: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç',
        number: 1,
        comments: 5,
        likes: 10
      }
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    var transformedPost = {
      platform: 'vk',
      date: mockHandleWallGetResult[0].date,  // –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–∞—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
      text: mockHandleWallGetResult[0].text,
      link: mockHandleWallGetResult[0].link,  // –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞–ø—Ä—è–º—É—é
      id: mockHandleWallGetResult[0].number,  // –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è number, –Ω–µ id!
      likes: mockHandleWallGetResult[0].likes,
      comments: mockHandleWallGetResult[0].comments
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è
    if (transformedPost.platform !== 'vk') {
      throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ' + transformedPost.platform);
    }
    
    if (transformedPost.date !== '2024-01-15 12:00') {
      throw new Error('–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –æ—Ç handleWallGet_: ' + transformedPost.date);
    }
    
    if (transformedPost.id !== 1) {
      throw new Error('ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∑—è—Ç –∏–∑ number, –∞ –Ω–µ id: ' + transformedPost.id);
    }
    
    return {
      name: 'importVkPostsAdvanced –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (date, link, number)',
      passed: true,
      error: null
    };
  } catch (e) {
    return {
      name: 'importVkPostsAdvanced –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (date, link, number)',
      passed: false,
      error: e.message
    };
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–π smoke-—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
 */
function runQuickSyntaxCheck() {
  Logger.log('üî• === –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–ù–¢–ê–ö–°–ò–°–ê ===');
  
  var checks = [];
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Constants.gs
  try {
    var systemLogsName = SYSTEM_LOGS_NAME;
    checks.push({ name: 'Constants.gs —Å–∏–Ω—Ç–∞–∫—Å–∏—Å', passed: true });
    Logger.log('‚úÖ Constants.gs: SYSTEM_LOGS_NAME = ' + systemLogsName);
  } catch (e) {
    checks.push({ name: 'Constants.gs —Å–∏–Ω—Ç–∞–∫—Å–∏—Å', passed: false, error: e.message });
    Logger.log('‚ùå Constants.gs: ' + e.message);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
  var functions = [
    'handleWallGet_',
    'importVkPostsAdvanced',
    'writePostsToSheet',
    'createStopWordsFormulas',
    'applyUniformFormatting'
  ];
  
  functions.forEach(function(funcName) {
    try {
      if (typeof eval(funcName) === 'function') {
        checks.push({ name: funcName + ' —Å–∏–Ω—Ç–∞–∫—Å–∏—Å', passed: true });
        Logger.log('‚úÖ ' + funcName + ': OK');
      } else {
        checks.push({ name: funcName + ' —Å–∏–Ω—Ç–∞–∫—Å–∏—Å', passed: false, error: '–ù–µ —Ñ—É–Ω–∫—Ü–∏—è' });
        Logger.log('‚ùå ' + funcName + ': –ù–µ —Ñ—É–Ω–∫—Ü–∏—è');
      }
    } catch (e) {
      checks.push({ name: funcName + ' —Å–∏–Ω—Ç–∞–∫—Å–∏—Å', passed: false, error: e.message });
      Logger.log('‚ùå ' + funcName + ': ' + e.message);
    }
  });
  
  var passed = checks.filter(function(c) { return c.passed; }).length;
  Logger.log('');
  Logger.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: ' + passed + '/' + checks.length + ' OK');
  
  return checks;
}

/**
 * –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤: –º–æ–∫-—Ç–µ—Å—Ç—ã + —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
 */
function runAllValidationTests() {
  Logger.log('');
  Logger.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
  Logger.log('‚ïë  –ú–û–ö-–¢–ï–°–¢–´ –í–ê–õ–ò–î–ê–¶–ò–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ò–ú–ü–û–†–¢–ê –ü–û–°–¢–û–í       ‚ïë');
  Logger.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù');
  Logger.log('');
  
  // –°–∏–Ω—Ç–∞–∫—Å–∏—Å
  var syntaxChecks = runQuickSyntaxCheck();
  
  Logger.log('');
  
  // –ú–æ–∫-—Ç–µ—Å—Ç—ã
  var mockTests = runMockFixValidationTests();
  
  Logger.log('');
  Logger.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
  Logger.log('‚ïë  –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê                                       ‚ïë');
  Logger.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù');
  
  var totalChecks = syntaxChecks.length + mockTests.total;
  var totalPassed = syntaxChecks.filter(function(c) { return c.passed; }).length + mockTests.passed;
  var totalFailed = totalChecks - totalPassed;
  
  Logger.log('');
  Logger.log('–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ' + totalChecks);
  Logger.log('‚úÖ –ü—Ä–æ—à–ª–∏: ' + totalPassed);
  Logger.log('‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω—ã: ' + totalFailed);
  Logger.log('');
  
  if (totalFailed === 0) {
    Logger.log('üéâüéâüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û! üéâüéâüéâ');
    Logger.log('');
    Logger.log('‚úÖ –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!');
  } else {
    Logger.log('‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´! ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è');
    Logger.log('');
    Logger.log('‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º!');
  }
  
  return {
    syntax: syntaxChecks,
    mocks: mockTests,
    total: totalChecks,
    passed: totalPassed,
    failed: totalFailed
  };
}
